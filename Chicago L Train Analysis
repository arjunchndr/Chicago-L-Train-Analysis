{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Chicago \"L\" Train Analysis\n",
    "***"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Located [here](https://data.cityofchicago.org/Transportation/CTA-Ridership-L-Station-Entries-Daily-Totals/5neh-572f) is data on the daily totals of ridership, by station entry, for each 'L' station in Chicago dating back to 2001. Dataset shows entries at all turnstiles, combined, for each station. Daytypes are as follows: W=Weekday, A=Saturday, U=Sunday/Holiday. This is the data that has been used to answer the questions posed below.\n",
    "\n",
    ">For those not familiar, the \"L\" is Chicago's system of elevated and subway trains. You can find more data about the stations [here](https://data.cityofchicago.org/Transportation/CTA-System-Information-List-of-L-Stops/8pix-ypme) and context [here](https://en.wikipedia.org/wiki/Chicago_%22L%22) should you need it.\n",
    "\n",
    "__Warm Up questions__\n",
    "\n",
    "1. Which stop has the highest average ridership per day, and what is it?\n",
    "2. Which stop has the greatest standard deviation in weekday (exclude holidays) ridership per day, and what is it?\n",
    "\n",
    "__Challenge question__\n",
    "\n",
    "Please choose a specific business, any kind of business will do (and tell us the business you chose). Imagine youâ€™re helping that business owner in Chicago and s/he is looking to open a new location. In the form of writing, potentially supplemented by sketches (computer-drawn or hand-drawn) and links, we want to see your response to these questions:\n",
    "- What questions could you potentially explore/answer with this data?\n",
    "- Ideally, what other data would you gather or combine to learn even more?\n",
    "- How would you want to see data presented, to make it actionable by you or others?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Loading the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import collections as cll\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Read the input data csv file into a pandas dataframe 'data'\n",
    "data = pd.read_csv('data/CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals.csv')\n",
    "data_info = pd.read_csv('data/CTA_-_System_Information_-_List_of__L__Stops.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exploring the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>station_id</th>\n",
       "      <th>rides</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>879576.000000</td>\n",
       "      <td>879576.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>40760.807241</td>\n",
       "      <td>3306.273856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>445.372709</td>\n",
       "      <td>3184.652927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>40010.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>40370.000000</td>\n",
       "      <td>1123.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>40750.000000</td>\n",
       "      <td>2318.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>41150.000000</td>\n",
       "      <td>4350.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>41700.000000</td>\n",
       "      <td>36323.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          station_id          rides\n",
       "count  879576.000000  879576.000000\n",
       "mean    40760.807241    3306.273856\n",
       "std       445.372709    3184.652927\n",
       "min     40010.000000       0.000000\n",
       "25%     40370.000000    1123.000000\n",
       "50%     40750.000000    2318.000000\n",
       "75%     41150.000000    4350.000000\n",
       "max     41700.000000   36323.000000"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Generate descriptive statistics of our rides dataset\n",
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(879576, 5)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Returns a tuple describing the (row count or Num of Observations, column count or Num of Features)\n",
    "data.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Computing Distinct Number of Stations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "147"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(data['station_id'].unique())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Computing Distinct Number of Station Names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "148"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(data['stationname'].unique())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Computing Distinct Number of Geographically Mapped Stations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "143"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(data_info['MAP_ID'].unique())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Total Number of Rides"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2908119133"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['rides'].sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Computing Dates as Datetime objects"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "data['date'] = pd.to_datetime(data['date'], format='%m/%d/%Y')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Converting Dates to Day of the Week Names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "data['dayname'] = data['date'].dt.weekday_name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>station_id</th>\n",
       "      <th>stationname</th>\n",
       "      <th>date</th>\n",
       "      <th>daytype</th>\n",
       "      <th>rides</th>\n",
       "      <th>dayname</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40010</td>\n",
       "      <td>Austin-Forest Park</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>290</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>40020</td>\n",
       "      <td>Harlem-Lake</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>633</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>40030</td>\n",
       "      <td>Pulaski-Lake</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>483</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>40040</td>\n",
       "      <td>Quincy/Wells</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>374</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>40050</td>\n",
       "      <td>Davis</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>804</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   station_id         stationname       date daytype  rides dayname\n",
       "0       40010  Austin-Forest Park 2001-01-01       U    290  Monday\n",
       "1       40020         Harlem-Lake 2001-01-01       U    633  Monday\n",
       "2       40030        Pulaski-Lake 2001-01-01       U    483  Monday\n",
       "3       40040        Quincy/Wells 2001-01-01       U    374  Monday\n",
       "4       40050               Davis 2001-01-01       U    804  Monday"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# To verify that our csv file has been successfully loaded and transformed into the pandas dataframe\n",
    "# It prints the first 5 rows of our dataframe\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>station_id</th>\n",
       "      <th>stationname</th>\n",
       "      <th>date</th>\n",
       "      <th>daytype</th>\n",
       "      <th>rides</th>\n",
       "      <th>dayname</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>879571</th>\n",
       "      <td>41700</td>\n",
       "      <td>Washington/Wabash</td>\n",
       "      <td>2017-11-26</td>\n",
       "      <td>U</td>\n",
       "      <td>4122</td>\n",
       "      <td>Sunday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>879572</th>\n",
       "      <td>41700</td>\n",
       "      <td>Washington/Wabash</td>\n",
       "      <td>2017-11-27</td>\n",
       "      <td>W</td>\n",
       "      <td>10244</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>879573</th>\n",
       "      <td>41700</td>\n",
       "      <td>Washington/Wabash</td>\n",
       "      <td>2017-11-28</td>\n",
       "      <td>W</td>\n",
       "      <td>10505</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>879574</th>\n",
       "      <td>41700</td>\n",
       "      <td>Washington/Wabash</td>\n",
       "      <td>2017-11-29</td>\n",
       "      <td>W</td>\n",
       "      <td>10437</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>879575</th>\n",
       "      <td>41700</td>\n",
       "      <td>Washington/Wabash</td>\n",
       "      <td>2017-11-30</td>\n",
       "      <td>W</td>\n",
       "      <td>10653</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        station_id        stationname       date daytype  rides    dayname\n",
       "879571       41700  Washington/Wabash 2017-11-26       U   4122     Sunday\n",
       "879572       41700  Washington/Wabash 2017-11-27       W  10244     Monday\n",
       "879573       41700  Washington/Wabash 2017-11-28       W  10505    Tuesday\n",
       "879574       41700  Washington/Wabash 2017-11-29       W  10437  Wednesday\n",
       "879575       41700  Washington/Wabash 2017-11-30       W  10653   Thursday"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# It prints the last 5 rows of our dataframe\n",
    "data.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Date Span for the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2001-01-01 00:00:00 - 2017-11-30 00:00:00\n"
     ]
    }
   ],
   "source": [
    "min_dt, max_dt =  min(data['date']), max(data['date']) \n",
    "print(\"{0} - {1}\".format(min_dt, max_dt))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Preprocessing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On finer inspection of the datasets I found that,\n",
    "- The number of Daily Station Recordings gathered are not all the same, some have fewer than the computed average\n",
    "- Some Station Names in the system information dataset have the same Station ID (e.g. \\['Skokie', 'Dempster-Skokie'\\]) that need to be remapped\n",
    "- There are a few Stations where there is no Station Line, Location, or Descriptive Information\n",
    "- There is a station with a duplicate name entry mapped to the same map ID \\[Duplicate - 95th/Ran Ryan, Original - 95th/Dan Ryan\\]\n",
    "- There is a station Roosevelt that contains two geographical locations (one of which is less precise) due to multiple stop IDs "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop a duplicate entry via name, but mapped to same MAP_ID\n",
    "def clean_mismatched_stationnames(df_info_in):\n",
    "    cols = ['MAP_ID', 'STATION_NAME']\n",
    "    df_info = df_info_in[cols].drop_duplicates().reset_index().drop('index',axis=1)\n",
    "    # drop the STATION_NAME with 95th/Ran Ryan, keep 95th/Dan Ryan\n",
    "    df_info = df_info_in[df_info_in['STATION_NAME'] != '95th/Ran Ryan']\n",
    "    return df_info\n",
    "\n",
    "# Roosevelt has two locations due to Multiple Stop Ids, one of which could be less precise\n",
    "def lessprecise_latlong(df_info_in):\n",
    "    cols = ['MAP_ID', 'Location']\n",
    "    df_info = df_info_in[cols].drop_duplicates().reset_index().drop('index',axis=1)\n",
    "    cond = df_info[df_info.MAP_ID.duplicated() == 1]['Location']\n",
    "    if len(cond):\n",
    "        df_info = df_info_in[~df_info_in.Location.isin(cond)]\n",
    "    else:\n",
    "        df_info = df_info_in\n",
    "    return df_info\n",
    "\n",
    "data_info_cl = clean_mismatched_stationnames(data_info) # Cleaned CTA System Information Dataset\n",
    "data_info_cl = lessprecise_latlong(data_info_cl) # Cleaned CTA System Information Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Multiple Station Names per Station ID:{40140: ['Skokie', 'Dempster-Skokie']}\n",
      "Selected Station Kept to Station ID:{40140: 'Dempster-Skokie'}\n",
      "Number of Stations: 147\n"
     ]
    }
   ],
   "source": [
    "import warnings; warnings.simplefilter('ignore')\n",
    "# Certain station names have the same station id: causing an imbalance between station_id & stationname\n",
    "def remap_stationnames(df_rides_in, df_info_in):\n",
    "    data_dict = {}\n",
    "    # determine which station names are duplicated to a station id\n",
    "    for idx, row in df_rides_in.iterrows():\n",
    "        sta_id, sta_name = ( row['station_id'], row['stationname'] )\n",
    "        data = data_dict.get(sta_id, [])\n",
    "        if sta_name not in data: data.append(sta_name)\n",
    "        data_dict[sta_id] = data\n",
    "    sta_multi_dict = dict( filter(lambda kv: len(kv[1]) > 1, data_dict.items()) )\n",
    "    # see which names are actually in the stop information list\n",
    "    sta_names_dict = {}\n",
    "    for k,v in sta_multi_dict.items(): \n",
    "        for sta_name in v: \n",
    "            match = df_info_in[df_info_in.STATION_NAME == sta_name].shape[0]\n",
    "            if match: \n",
    "                sta_names_dict[k] = sta_name\n",
    "    print(\"Multiple Station Names per Station ID:{0}\\nSelected Station Kept to Station ID:{1}\"\\\n",
    "          .format(sta_multi_dict, sta_names_dict))\n",
    "    return sta_names_dict\n",
    "\n",
    "def replace_stationnames(df_rides_in, data_dict_in):\n",
    "    for k,v in sta_names_dict.items():\n",
    "        frame = data_cl[data_cl.station_id == k]\n",
    "        frame.loc[:, 'stationname'] = v\n",
    "        df_rides_in.iloc[frame.index, :] = frame\n",
    "    return df_rides_in\n",
    "\n",
    "data_cl = data.copy() # Cleaned CTA Rides Dataset\n",
    "sta_names_dict  = remap_stationnames(data, data_info_cl)\n",
    "data_cl = replace_stationnames(data_cl, sta_names_dict) # Cleaned CTA Rides Dataset\n",
    "print('Number of Stations: {}'.format(len(data_cl.stationname.unique())))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Station Names Filtered: [array(['Homan'], dtype=object), array(['Randolph/Wabash'], dtype=object), array(['Washington/State'], dtype=object), array(['Madison/Wabash'], dtype=object)]\n",
      "Number of Stations: 143\n"
     ]
    }
   ],
   "source": [
    "# Filter Stations that don't have any Line, Location, Descriptive Information\n",
    "def filter_missing_stations(df_rides_in, df_info_in):\n",
    "    def __init__(self):\n",
    "        sta = 0\n",
    "    cta_sta_ids = df_info_in['MAP_ID'].unique().tolist()\n",
    "    cta_missing_sta_ids = list( set(df_rides_in.station_id.unique() ) - set(cta_sta_ids) )\n",
    "    cta_missing_sta_names = [df_rides_in[df_rides_in['station_id'] == sta]['stationname'].unique() for sta in cta_missing_sta_ids]\n",
    "    print(\"Station Names Filtered: {0}\".format(cta_missing_sta_names))\n",
    "    return df_rides_in[df_rides_in['station_id'].isin(cta_sta_ids)]\n",
    "        \n",
    "data_flt = filter_missing_stations(data_cl, data_info_cl) # Filtered CTA Rides Dataset\n",
    "print('Number of Stations: {}'.format(len(data_flt.stationname.unique())))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On an average, certain stations may not have an equal distribution of gathered daily stops. Hence, we filter this out from our decision making process, as it could possibly skew some of our data results.\n",
    "\n",
    "So basically we filter using this criteria --> avg(daily counts recorded < 5000) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Daily Avg Records/per station: 6181\n",
      "\n",
      "Dropping following Stations: stationname\n",
      "Cermak-McCormick Place    1065\n",
      "Morgan-Lake               2040\n",
      "Oakton-Skokie             2070\n",
      "Washington/Wabash          122\n",
      "Name: date, dtype: int64\n",
      "Number of Stations: 139\n"
     ]
    }
   ],
   "source": [
    "def outliers_zscore(data, dev=3):\n",
    "    # does not perform well on small datasets, based on extreme values\n",
    "    c_med, c_mu, c_std = (np.median(data), np.mean(data), np.std(data))\n",
    "    z = (data - c_mu)/c_std\n",
    "    return np.where(np.abs(z) > dev)\n",
    "\n",
    "def filter_sta_lowrecords(df_rides_in):\n",
    "    # if we have any record to process below a accumulated number of \n",
    "    agg = df_rides_in.groupby(['stationname'])['date'].count()\n",
    "    n_avg_station_dailyrecords = int(agg.median())\n",
    "    low_staname_records = agg.iloc[ outliers_zscore(agg) ].index.tolist()\n",
    "    print('Daily Avg Records/per station: {}\\n'.format(n_avg_station_dailyrecords))\n",
    "    print('Dropping following Stations: {}'.format( agg.iloc[ outliers_zscore(agg)]))    \n",
    "    return df_rides_in[~df_rides_in['stationname'].isin(low_staname_records)]\n",
    "        \n",
    "data_pre = filter_sta_lowrecords(data_flt) # Preprocessed CTA Rides Dataset\n",
    "print('Number of Stations: {}'.format(len(data_pre.stationname.unique())))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Computing Daily Rides Statistics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Number of Daily Rides Recorded"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6178"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_dr = len(data_pre['date'].unique())\n",
    "num_dr"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Average Daily Rides for a single station"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This function computes the average daily riders for a particular station, with optional filtering on daytype (W=Weekday, A=Saturday, U=Sunday/Holiday) and day_name (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday).\n",
    "\n",
    "- __Parameters__: `station_name` (name of the station), `daytype` (type of day),\n",
    "`day_name` (name of the day of the week)\n",
    "- __Returns__: average daily riders for that station"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "def adr(station_name, daytype=None, day_name=None):\n",
    "    station_data = data_pre[data_pre[\"stationname\"] == station_name]\n",
    "    if daytype:\n",
    "        return station_data.loc[data_pre[\"daytype\"] == daytype, 'rides'].mean()\n",
    "    elif day_name:\n",
    "        return station_data.loc[data_pre[\"dayname\"] == day_name, 'rides'].mean()\n",
    "    else:\n",
    "        return station_data[\"rides\"].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Average Daily Rides for all stations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>station_id</th>\n",
       "      <th>stationname</th>\n",
       "      <th>date</th>\n",
       "      <th>daytype</th>\n",
       "      <th>rides</th>\n",
       "      <th>dayname</th>\n",
       "      <th>Mean_Daily_Rides</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40010</td>\n",
       "      <td>Austin-Forest Park</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>290</td>\n",
       "      <td>Monday</td>\n",
       "      <td>1536.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>40020</td>\n",
       "      <td>Harlem-Lake</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>633</td>\n",
       "      <td>Monday</td>\n",
       "      <td>3094.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>40030</td>\n",
       "      <td>Pulaski-Lake</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>483</td>\n",
       "      <td>Monday</td>\n",
       "      <td>1436.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>40040</td>\n",
       "      <td>Quincy/Wells</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>374</td>\n",
       "      <td>Monday</td>\n",
       "      <td>5625.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>40050</td>\n",
       "      <td>Davis</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>804</td>\n",
       "      <td>Monday</td>\n",
       "      <td>3322.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   station_id         stationname       date daytype  rides dayname  \\\n",
       "0       40010  Austin-Forest Park 2001-01-01       U    290  Monday   \n",
       "1       40020         Harlem-Lake 2001-01-01       U    633  Monday   \n",
       "2       40030        Pulaski-Lake 2001-01-01       U    483  Monday   \n",
       "3       40040        Quincy/Wells 2001-01-01       U    374  Monday   \n",
       "4       40050               Davis 2001-01-01       U    804  Monday   \n",
       "\n",
       "   Mean_Daily_Rides  \n",
       "0            1536.0  \n",
       "1            3094.0  \n",
       "2            1436.0  \n",
       "3            5625.0  \n",
       "4            3322.0  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for station in data_pre['stationname'].unique():\n",
    "        data_pre.loc[data_pre['stationname'] == station, 'Mean_Daily_Rides'] = adr(station)\n",
    "        \n",
    "# Approximation of decimal mean daily rides values by truncation through thr round() method\n",
    "data_pre.round().head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Warm Up Question 1 - Station with the Maximum Average Daily Rides\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Which stop has the highest average ridership per day, and what is it?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stationname</th>\n",
       "      <th>Mean_Daily_Rides</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Clark/Lake</td>\n",
       "      <td>13830.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   stationname  Mean_Daily_Rides\n",
       "36  Clark/Lake           13830.0"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find maximum average daily rides value\n",
    "max_mean_rides = data_pre['Mean_Daily_Rides'].max()\n",
    "\n",
    "# Apply row filter of max average rides on input dataframe across the columns for stationname and Mean_Daily_Rides\n",
    "max_mean_rides_station = data_pre[data_pre['Mean_Daily_Rides'] == data_pre['Mean_Daily_Rides'].max()][['stationname', 'Mean_Daily_Rides']]\n",
    "\n",
    "# Drop multiple occurences of the row containing the same values across the column filters                                                                                           'Mean_Daily_Rides']]\n",
    "max_mean_rides_station.round().drop_duplicates()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Standard Deviation of Daily Rides for a single station"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This function computes the standard deviation of daily riders for a particular station, with optional filtering on daytype (W=Weekday, A=Saturday, U=Sunday/Holiday) and day_name (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday).\n",
    "- __Parameters__: `station_name` (name of the station), `daytype` (type of day), `day_name` (name of the day of the week)\n",
    "- __Returns__: standard deviation of daily riders for that station"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "def std_dev_dr(station_name, daytype=None, day_name=None):\n",
    "    \"\"\" Find the standard deviation for a given station's number of riders, with optional day to be specified.\n",
    "    INPUT: station name, day of choice\n",
    "    OUTPUT: standard deviation\n",
    "    \"\"\"\n",
    "    station_data = data_pre[data_pre[\"stationname\"] == station_name]\n",
    "    if daytype:\n",
    "        return station_data.loc[data_pre['daytype'] == daytype, 'rides'].std()\n",
    "    elif day_name:\n",
    "        return station_data.loc[data_pre['dayname'] == day_name, 'rides'].std()\n",
    "    else:\n",
    "        return station_data['rides'].std()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Standard Deviation Daily Rides for all stations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>station_id</th>\n",
       "      <th>stationname</th>\n",
       "      <th>date</th>\n",
       "      <th>daytype</th>\n",
       "      <th>rides</th>\n",
       "      <th>dayname</th>\n",
       "      <th>Mean_Daily_Rides</th>\n",
       "      <th>Standard_Deviation_Daily_Rides</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40010</td>\n",
       "      <td>Austin-Forest Park</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>290</td>\n",
       "      <td>Monday</td>\n",
       "      <td>1536.0</td>\n",
       "      <td>572.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>40020</td>\n",
       "      <td>Harlem-Lake</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>633</td>\n",
       "      <td>Monday</td>\n",
       "      <td>3094.0</td>\n",
       "      <td>977.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>40030</td>\n",
       "      <td>Pulaski-Lake</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>483</td>\n",
       "      <td>Monday</td>\n",
       "      <td>1436.0</td>\n",
       "      <td>449.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>40040</td>\n",
       "      <td>Quincy/Wells</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>374</td>\n",
       "      <td>Monday</td>\n",
       "      <td>5625.0</td>\n",
       "      <td>2934.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>40050</td>\n",
       "      <td>Davis</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>804</td>\n",
       "      <td>Monday</td>\n",
       "      <td>3322.0</td>\n",
       "      <td>815.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   station_id         stationname       date daytype  rides dayname  \\\n",
       "0       40010  Austin-Forest Park 2001-01-01       U    290  Monday   \n",
       "1       40020         Harlem-Lake 2001-01-01       U    633  Monday   \n",
       "2       40030        Pulaski-Lake 2001-01-01       U    483  Monday   \n",
       "3       40040        Quincy/Wells 2001-01-01       U    374  Monday   \n",
       "4       40050               Davis 2001-01-01       U    804  Monday   \n",
       "\n",
       "   Mean_Daily_Rides  Standard_Deviation_Daily_Rides  \n",
       "0            1536.0                           572.0  \n",
       "1            3094.0                           977.0  \n",
       "2            1436.0                           449.0  \n",
       "3            5625.0                          2934.0  \n",
       "4            3322.0                           815.0  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for station in data_pre['stationname'].unique():\n",
    "        data_pre.loc[data_pre['stationname'] == station, 'Standard_Deviation_Daily_Rides'] = std_dev_dr(station)\n",
    "\n",
    "# Approximation of decimal mean daily rides values by truncation through thr round() method\n",
    "data_pre.round().head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Warm Up Question 2 - Station with the Greatest Standard Deviation Daily Rides (excluding holidays)\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stationname</th>\n",
       "      <th>Standard_Deviation_Daily_Rides</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>Lake/State</td>\n",
       "      <td>4405.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    stationname  Standard_Deviation_Daily_Rides\n",
       "140  Lake/State                          4405.0"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Make a deep copy of our original dataframe to facilitate filtering the dataframe by Weekday(i.e. daytype='W')\n",
    "std_dev_weekday_df = data_pre.copy()\n",
    "\n",
    "# Filtering the dataframe by Weekday(i.e. daytype='W')\n",
    "for station in std_dev_weekday_df['stationname'].unique():\n",
    "        std_dev_weekday_df.loc[std_dev_weekday_df['stationname'] == station, 'Standard_Deviation_Daily_Rides'] = std_dev_dr(station, daytype='W')\n",
    "\n",
    "# Find greatest standard deviation daily rides value\n",
    "max_std_dev_rides = std_dev_weekday_df['Standard_Deviation_Daily_Rides'].max()\n",
    "\n",
    "# Apply row filter of max standard deviation rides on input dataframe across the columns \n",
    "# for stationname and Mean_Daily_Rides\n",
    "max_std_dev_rides_station = std_dev_weekday_df[std_dev_weekday_df['Standard_Deviation_Daily_Rides']==\n",
    "std_dev_weekday_df['Standard_Deviation_Daily_Rides'].max()][['stationname', 'Standard_Deviation_Daily_Rides']]\n",
    "\n",
    "# Drop multiple occurences of the row containing the same values across the column filters      \n",
    "max_std_dev_rides_station.round().drop_duplicates()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Challenge Question\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Please choose a specific business, any kind of business will do (and tell us the business you chose). Imagine youâ€™re helping that business owner in Chicago and s/he is looking to open a new location. In the form of writing, potentially supplemented by sketches (computer-drawn or hand-drawn) and links, we want to see your response to these questions:\n",
    "\n",
    "- What questions could you potentially explore/answer with this data?\n",
    "- Ideally, what other data would you gather or combine to learn even more?\n",
    "- How would you want to see data presented, to make it actionable by you or others?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The Business"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To answer this aspect of the challenge I would like to reference an idea that was born as a result of nostalgia and yearning during the first year of my graduate program at Northeastern University.\n",
    "\n",
    "It was the Spring semester of the year 2016 and I had decided to explore the Business Analysis course offering. The course had us students clustered into teams of four and then tasked to develop a business plan as well as a static prototype for any category of business.\n",
    "\n",
    "Slumped over a pile of crushed papers containing failed ideas, we let out a defeated sigh and decided to order lunch to quench the ravenous feeling that had dawned upon us. After mulling over dozens of restaurant listings online we failed to decide a restaurant we unanimously liked. \n",
    "\n",
    "At this moment, one of my team mates groaned and said, \"I wish I could eat home cooked Indian food! I really miss the authenticity and freshness of the dishes prepared at home.\"\n",
    "\n",
    "This particular moment provided invaluable impetus for a rather animated brainstorming session (we were hungry!) at the library that laid the foundation for [__`ChefMeUp!`__](https://drive.google.com/open?id=0Bw2qAB0btRDSc0MzZjVOWU9jLUU). \n",
    "\n",
    "[__`ChefMeUp!`__](https://drive.google.com/open?id=0Bw2qAB0btRDSc0MzZjVOWU9jLUU) is a web platform that integrates online food ordering from restaurants as well as from home-chefs to provide authentic food experiences through variety. For a deeper understanding of our business system, Iâ€™d suggest you take a look at [this case study report](https://drive.google.com/open?id=0Bw2qAB0btRDSc0MzZjVOWU9jLUU)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Our Research"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "While our business model scaled well to the online market, we never really got a chance to test the domestic retail market. While some of my team mates moved on to other ventures during our graduate studies; Agastya and I decided to explore how best we could lay the foundation to ensure the holistic growth of our business online as well as offline. \n",
    "\n",
    "To assist our business owners manage their operations we decided to design a system, [__`HungeReady`__](https://github.com/arjunchndr/HungeReady-and-HungeReadyToEat-), to support and automate their front and back of house operations. We also extended our web applicationâ€™s functionality by designing a mobile-app, [__`HungeReadyToEat?`__](https://github.com/arjunchndr/HungeReady-and-HungeReadyToEat-), for delivery drivers. For a comprehensive understanding of our system, Iâ€™d suggest you take a look at [this GitHub repository](https://github.com/arjunchndr/HungeReady-and-HungeReadyToEat-). \n",
    "\n",
    "According to our research, there is only a forty percent chance of success in the first year of starting a restaurant (as with most small businesses) and hence is a high-risk venture. The majority of reasons restaurant fail are avoidable. Lack of experience, lack of capital, poor locations, inventory mismanagement are common mistakes found in floundering restaurant businesses. Often would be owners have a great restaurant idea and lots of motivation but little knowledge or experience of the restaurant industry.   \n",
    "\n",
    "Many factors go into running a successful business and many owners do not realize the skills and knowledge needed to start and keep their restaurant successful. Turning a profit is crucial undoubtedly; however, a profitable restaurant can be shut down for repeated health or safety codes.\n",
    "\n",
    "The food service industry and economy are constantly changing. Restaurant owners must stay abreast of trends, regulations, consumer wants and a number of other dynamics. One way to obtain these skills is to start small, and why we felt that in most cases starting a food truck before plunging into opening a full restaurant is the best way to help improve our odds at opening and maintain a successful restaurant. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Why Open A Food Truck Before/Instead Opening A Restaurant? (a.k.a The Pros)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Low Risk\n",
    "    > The costs involved in opening a restaurant vary based on the concept you develop. Opening a high end dining establishment can start at \\$500,000 and can run into the millions. Opening a food truck with a similar style (only smaller) of menu can cost as little as \\$50,000. By starting small, you will learn several lessons in a truck as you would in a restaurant. Operating any food service business is risky, but if your idea fails, would you rather have a smaller investment to lose than a much larger one?\n",
    "    \n",
    "- Brand Building\n",
    "    > Building a successful brand for a restaurant can take years. If you take the wrong path in developing your restaurant brand, it will take much longer since you will have to re-brand until you get it right. Operating a food truck allows a culinary entrepreneur to make modifications to their brand as easily as it is to find a new location to park in. Once you discover a brand that works, you will be able to build up a strong customer base that will in all likelihood follow you into your new restaurant.\n",
    "\n",
    "- Work Out the Kinks\n",
    "    > Efficient operation in a restaurant is what will make the business run smoothly. From your customer service to the way you order and prepare the food you plan to serve your customers. Operating a food truck requires that most owners learn every chore within a truck. This will give you insight into improving your operational efficiency that will eventually translate into building a foundation for your restaurant.\n",
    "    \n",
    "- Understand Your Local Legal System\n",
    "    > Unless you have an attorney that has extensive experience in the process of opening a restaurant, it can take a lot of time and effort to navigate through most community legal systems. Although obtaining permissions, construction and operations can be a daunting task for a new restaurant, this whole process gets exacerbated for food truck establishments. Getting to know your local municipal permitting organizations will be a valuable tool once you determine itâ€™s time to plan for your restaurant. You will get to know the individuals in the permitting office as well as the health department. Building a rapport with them as a truck owner will ensure a smoother transition to begin your restaurant's permitting process.\n",
    "    \n",
    "- Understand Your Customers\n",
    "    > So who is your target market? Will it be the over 40 crowd looking for a fine sit down meal with linen napkins or the new generation of millennials who are looking for locally produced meals with a gourmet flair? Until a food business opens their doors and customers start showing up, it can be difficult to understand who they are. By creating a food truck menu, you will be able to find out what types of food will be a success with your targeted customers and which ones will fail. You will be able to test various menu options without needing to revamp your entire kitchen as most trucks have the exact same types of kitchen equipment a restaurant has. What are your customers willing to pay for specific menu items? While food trucks typically have lower price points than their brick and mortar competitors, you can easily scale your truckâ€™s menu to a full service restaurant menu with a little basic math.\n",
    "    \n",
    "- Ideal Location\n",
    "    > Finding the best location for a restaurant is one of the key ingredients to operating a successful restaurant. At times it can seem like a crap shoot in finding the best location to plant your roots. By operating a food truck in your local area, you will gain the understanding of where your customers are coming from, and how to bring a storefront into their neighborhood. Once again, by running a food truck, you are able to speak with your customers and get to know them and where they live or work. This is invaluable research data that can only be tested if your concept is mobile.\n",
    "    \n",
    "- Long-Term Profits\n",
    "    > One of the downsides of a restaurant is that a landlord will likely jack up rents if you are successful, keeping you from maintaining profit margins. You can avoid this if you manage to build a successful food truck business.\n",
    "    \n",
    "- Mobility\n",
    "    > Mobility means being able to reach a large customer base regularly by going where there are large or predictable crowds (e.g. city center, tourist areas).\n",
    "    \n",
    "- Unique\n",
    "    > You can stand out from traditional restaurants in your region â€“ [Research by NRA](https://mobile-cuisine.com/off-the-wire/food-truck-industry-to-grow-from-615m-to-2-7b-in-5-years/) saw food truck customers use words like fun, exciting, new, different, unusual, and unique to describe their experience.\n",
    "    \n",
    "- Ability to scale depending on your schedule and budget\n",
    "    > Compared to a traditional restaurant, you have more flexibility with a food truck in terms of hours of operation, menu items, and other financial and operational decisions."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Additionally we wanted to extend our idea to support a mobile application supporting food trucks. We wanted to build an application that would serve as a food truck ecosystem to help us as well as the food truck business owners understand the users thoroughly before helping them start a restaurant. More importantly we wanted to provide a platform supporting food truck business owners in handling their legal, administrative, economic and social needs. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Reasons to develop a food truck application"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- We wanted to track KPIs (Key Performance Indicators) like, \n",
    "    - Demographic Neighborhood Fit, \n",
    "    - Density of Population, \n",
    "    - Restaurant Popularity, \n",
    "    - Cuisine Popularity, \n",
    "    - Connecting Stations  \n",
    "    - Central Stations (hubs)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Flexibility for customers with respect to,\n",
    "    - Pre-ordering dishes\n",
    "    > This would help customers with a tight lunch schedule and those with a busy schedule who would prefer a grab-and-go option.\n",
    "    - Vote for a particular cuisine at a location of their choice\n",
    "    > This would help us track the popularity of a particular cuisine and as a result the restaurant/home-chef and help us in our efforts to strategically place food trucks at locations and times of maximum viability. For example certain popular restaurants serving cuisines that appeal to a certain ethnic group that reside in far away neighborhoods may find it difficult to travel to eat at that restaurant. \n",
    "    > Opening a franchise food truck could help solve this problem and in the long run offer up useful statistics that we could extrapolate to understand if opening a brick and mortar establishment would be worthwhile. Also the time of day during which a particular cuisine is popular would help us understand the best hours of operation and thus help us operate our truck more efficiently.\n",
    "    - Signing up to showcase their individual cuisine either as an independent home-chef or a restaurant and thus understand their customers and location hotspots.\n",
    "    > A round robin selection of a particular cuisine for a week followed by another round robin selection of a home-chef/restaurant offering that cuisine would ensure a fair selection for each user on our platform. Measuring the statistics gathered from their activities on our platform would provide us invaluable insights with respect to eastablishing a full scale restaurant of a particular cuisine in the future. \n",
    "    - Tracking the location and schedule of their favorite food truck\n",
    "    > Measuring these statistics would help us in the formulation of a strategy that would assist placement of food trucks of different cuisines at their respective favorable schedules and may assist us in our home delivery services offered by [__`HungeReadyToEat?`__](https://github.com/arjunchndr/HungeReady-and-HungeReadyToEat-)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Purpose for this project"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To identify the most lucrative customer hotspots for food truck owners to park their establishments and understand best locations for future restaurant plans. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Initial Feature Engineering (ridership information)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Separate the \"Holidays\" from \"Sunday/Holiday\"\n",
    "- Extract and separate Month as a column\n",
    "- One Hot Encode the type of day (__daytype__)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>station_id</th>\n",
       "      <th>stationname</th>\n",
       "      <th>date</th>\n",
       "      <th>daytype</th>\n",
       "      <th>rides</th>\n",
       "      <th>dayname</th>\n",
       "      <th>Mean_Daily_Rides</th>\n",
       "      <th>Standard_Deviation_Daily_Rides</th>\n",
       "      <th>dow</th>\n",
       "      <th>month</th>\n",
       "      <th>daytype_Saturday</th>\n",
       "      <th>daytype_Sunday/Holiday</th>\n",
       "      <th>daytype_Weekday</th>\n",
       "      <th>daytype_Holiday</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>40010</td>\n",
       "      <td>Austin-Forest Park</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>290</td>\n",
       "      <td>Monday</td>\n",
       "      <td>1536.416437</td>\n",
       "      <td>571.682905</td>\n",
       "      <td>Monday</td>\n",
       "      <td>January</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>40020</td>\n",
       "      <td>Harlem-Lake</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>633</td>\n",
       "      <td>Monday</td>\n",
       "      <td>3094.157282</td>\n",
       "      <td>976.570347</td>\n",
       "      <td>Monday</td>\n",
       "      <td>January</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>40030</td>\n",
       "      <td>Pulaski-Lake</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>483</td>\n",
       "      <td>Monday</td>\n",
       "      <td>1436.182215</td>\n",
       "      <td>448.507513</td>\n",
       "      <td>Monday</td>\n",
       "      <td>January</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>40040</td>\n",
       "      <td>Quincy/Wells</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>374</td>\n",
       "      <td>Monday</td>\n",
       "      <td>5624.562288</td>\n",
       "      <td>2934.335560</td>\n",
       "      <td>Monday</td>\n",
       "      <td>January</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>40050</td>\n",
       "      <td>Davis</td>\n",
       "      <td>2001-01-01</td>\n",
       "      <td>U</td>\n",
       "      <td>804</td>\n",
       "      <td>Monday</td>\n",
       "      <td>3321.967956</td>\n",
       "      <td>814.828355</td>\n",
       "      <td>Monday</td>\n",
       "      <td>January</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   index  station_id         stationname       date daytype  rides dayname  \\\n",
       "0      0       40010  Austin-Forest Park 2001-01-01       U    290  Monday   \n",
       "1      1       40020         Harlem-Lake 2001-01-01       U    633  Monday   \n",
       "2      2       40030        Pulaski-Lake 2001-01-01       U    483  Monday   \n",
       "3      3       40040        Quincy/Wells 2001-01-01       U    374  Monday   \n",
       "4      4       40050               Davis 2001-01-01       U    804  Monday   \n",
       "\n",
       "   Mean_Daily_Rides  Standard_Deviation_Daily_Rides     dow    month  \\\n",
       "0       1536.416437                      571.682905  Monday  January   \n",
       "1       3094.157282                      976.570347  Monday  January   \n",
       "2       1436.182215                      448.507513  Monday  January   \n",
       "3       5624.562288                     2934.335560  Monday  January   \n",
       "4       3321.967956                      814.828355  Monday  January   \n",
       "\n",
       "   daytype_Saturday  daytype_Sunday/Holiday  daytype_Weekday  daytype_Holiday  \n",
       "0                 0                       1                0                1  \n",
       "1                 0                       1                0                1  \n",
       "2                 0                       1                0                1  \n",
       "3                 0                       1                0                1  \n",
       "4                 0                       1                0                1  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def extract_month(ds_in):\n",
    "    month_names = ds_in.map(lambda x: x.strftime('%B')).unique().tolist()\n",
    "    month_idxs  = ds_in.dt.month.unique().tolist()\n",
    "    month_mappings = {idx: name for idx,name in zip(month_idxs, month_names)}\n",
    "    return  ds_in.dt.month.apply(lambda x: month_mappings[x])\n",
    "\n",
    "def create_holidays(df_in, col, cond1, cond2):\n",
    "    # filter out just the holiday conditions, not holidays with an additional condition (e.g. sundays)\n",
    "    named_col = col.split('_')[0] + '_' + col.split('/')[1]\n",
    "    cond = df_in[(cond1)&(cond2)]\n",
    "    ds = pd.Series(np.zeros(len(df_in))).astype(int)\n",
    "    ds[cond.index] = 1\n",
    "    df_in[named_col] = ds\n",
    "    return df_in\n",
    "\n",
    "def ohe_catcol(df_in, mappings):\n",
    "    df_mapped = df_in\n",
    "    for col, mapping in mappings:\n",
    "        if mapping: \n",
    "            df_cat = df_in[col].apply(lambda x: mapping[x])\n",
    "        else: \n",
    "            df_cat = df_in[col]\n",
    "        df_types  = pd.get_dummies(df_cat, prefix=col)\n",
    "        df_mapped = pd.concat([df_types, df_mapped], axis=1)\n",
    "    return df_mapped\n",
    "\n",
    "def reorder_cols(df_in, col_filter):\n",
    "    # reorder columns by groupings\n",
    "    cols = df_in.columns\n",
    "    col_idxs = [col_filter in s for s in cols] \n",
    "    col_filter = np.where(col_idxs)[0].tolist()\n",
    "    col_rem    = list( set(range(len(col_idxs))) - set(col_filter) )\n",
    "    new_idxs   = col_rem + col_filter\n",
    "    return df_in.iloc[:,new_idxs]\n",
    "\n",
    "# Keep the preprocessed CTA Rides Dataset intact\n",
    "data_fe = data_pre.copy() # Feature Engineered CTA Rides Dataset\n",
    "extract_dayofweek  = lambda ds: pd.to_datetime(ds).dt.weekday_name\n",
    "extract_holidays   = lambda frame,cond1,cond2: frame[(cond1) & (cond2)]\n",
    "data_fe['dow']   = extract_dayofweek(data_fe['date'])\n",
    "data_fe['month'] = extract_month(data_fe['date'])\n",
    "\n",
    "daytype_mappings = {'W': 'Weekday', 'A': 'Saturday', 'U': 'Sunday/Holiday'}\n",
    "day_mappings = {'0': 'Mon', '1': 'Tues', '2': 'Wed'}\n",
    "data_fe = ohe_catcol(data_fe, [('daytype', daytype_mappings)])\n",
    "data_fe = data_fe.reset_index()\n",
    "\n",
    "holiday_conds = (data_fe['daytype_Sunday/Holiday'] == 1, data_fe['dow'] != 'Sunday')\n",
    "data_fe = create_holidays(data_fe, 'daytype_Sunday/Holiday', *holiday_conds)\n",
    "data_fe = reorder_cols(data_fe, 'daytype_')\n",
    "data_fe.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### What questions could you potentially explore/answer with this data?\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`Trends`\n",
    "- Are people using the CTA 'L' trains as their primary mode of transport?\n",
    "- Are alternate modes of transport used more frequently?\n",
    "- What has been the trend over the last few years?\n",
    "\n",
    "`Seasonality`\n",
    "- Are there any patterns with reespect to seasons?\n",
    "\n",
    "`Frequency`\n",
    "- Are certain stops being visited more often than the others?\n",
    "- Could this possibly due to a particular type of line (Eg. Green Line) a station is connected to?\n",
    "\n",
    "`Type of Day`\n",
    "- Are there certain stations being visited more often based on the type of day i.e. Weekend, Weekday, Holiday?\n",
    "- Is this impacting the traffic the business receives?\n",
    "\n",
    "`Central Hubs`\n",
    "- What is the impact of many junction points (stations from different lines) on a particular station stop?\n",
    "> For example, stops with at 3 junction points\n",
    "\n",
    "`Reliability, Skewness`\n",
    "- Do we have sufficient data encompassing all the different lines and stations?\n",
    "- Or, is the majority of the data coming from only the significant ones?\n",
    "\n",
    "`Demographics`\n",
    "- Does the projected neighborhood accurately represent the business' customers?\n",
    "- Can we expect the customers to visit the neighborhood?\n",
    "- Could this possibly be representative of the CTA location stops?\n",
    "\n",
    "`Sparsity`\n",
    "- Is the average foot traffic density sparser or denser?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### How would you want to see data presented, to make it actionable by you or others?\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Visualizations best showcase trends and bigger picture insights. Showing the difference between total riders per year naturally lends itself to a visualization (likely either a bar or line plot). Showing the average riders over the last week in the same chart, while technically valid, may potentially lend itself to possible overreaction on the reader's part. \"Oh, look! Such a massive drop from Sunday to Wednesday!\" But, in reality, this may be the expected behavior and our plot which lacks this context doesn't help us.\n",
    "\n",
    "In this case, what we'd really like to know is simply \"is the rider count/customer count/etc. we are observing this week within the realm of normalcy or is something else afoot?\" This classification itself could be presented graphically rather easily by showing an X-% range of expected behavior and where our current observations lie relative to this.\n",
    "\n",
    "Certain advanced visualization libraries could prove to be time consuming to decipher and can make drawing hard conclusions rather difficult. It may not be best for everyone or for presenting to higher-ups who would want to distill the information down to its most salient points which can help steer decisions.\n",
    "\n",
    "Sometimes, simple raw tabular data can be very useful while making basic comparisons as long as the table is concise and tidy. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n2uWFiqKQlZVFVVUVW7duZeTIkTRo0EBiGVAsXceTWBLr19ja2uLt7Y2dnR1lZWXs3buXoUOHkp2d\nDaBdAiexDCfeq3p+6PoabCie77I8ceJE9uzZw+PHj3FxccHT05M9e/awY8cOxo4dS5cuXXTeTOzn\nNMtPJ06cSP/+/QkODiY+Ph5XV1eqqqpITU3lrbfeqrUnsIqiUFhYqB2p9fTpU5KTkwkMDMTY2Ji0\ntDT2799PWloac+fO1eu4I82/U3V1NX//+9/p2bOntmuyIfRPMDMzw93dnZKSEr766qtaG3v379DM\nPXdxcaGkpAQrKysGDx6sswZ//xc2NjYEBwfTv39/WrZsqff3pqY5WE5ODo6OjjRu3JiHDx9y584d\nOnTowJgxYzA1NeXmzZts2LCBiRMnGsx1VfO6LVmyBDc3N9555x0yMzO5cOECbdq0oVOnTtr+J8//\n+dqgVqtJTk7WFryenp7MnDkTLy8vzp8/z7FjxxgxYkSt34D8v1AUBYAZM2Zw69Yt5s+fz6BBg/j6\n66/ZvXs3b7zxBu3bt9d+tupaZWUly5Ytw8jIiHnz5tGtWzeOHj3KqVOn6N27N127dn35uSkG6sGD\nB0qLFi2UYcOGKbdu3ZJYBh5L1/EklsT6NU+fPlU++eQTJTk5WRkzZoxy/fp1iWXg8V7V80PX12B9\nq6mpURISEpTt27crRUVFyvLly5V169Yp586dU8rLy5Xbt2/rO0VFrVZrf71r1y6lW7duSkVFhaIo\ninL48GFl9OjRyqhRo5QjR47Uah6jR49WBg4cqKxevVqb0/79+5XPPvtMSU9PV+Lj45XJkycr9+/f\nr9U8fqunT5/qO4VfVVZWpuTk5Og7jZ9Qq9XKsmXLlPj4eCUsLEy5c+eOvlMyWPv27VMqKiqU8vJy\n5ejRo8qIESOUzMxMRVEU5e7du8qHH36oLFiwQHny5Ily5coV5S9/+Yv29/Xt+etKSkqKMnbsWGXT\npk2KoijKjRs3lHnz5imLFi36yZ+rLdXV1dpf79q1S3nvvfeUlStXKo8fP1ZSUlKUOXPmKDNnzlRu\n3LhR67n8bzSvh+Ya/OjRI6V3797KsmXLtH/mww8/VB48eKC33DT//eabb5Thw4crSUlJiqIoyu3b\nt5XY2FglPz+/VuIb1BP055mYmHD37l1mzpxZ63M+JdbvL57Ekli/pqCggJiYGO7du0d8fDweHh4S\ny8Djvarnh66vwfrwfLf2jIwM4uLiCA0Nxc/PDxcXF9LT08nOzqZ9+/Z6f8r1fOOm5zv1JyUlabcm\n9OzZk9DQUFq1alVrTxLVajVPnjzh7t27nD17lry8PC5fvoy1tTVWVlbaeeIDBgwwuF4F+h6/9D8x\nNTXVa8O1X2JkZISjoyP16tVj9OjRuLq66jslg3TmzBliYmIwNzdn9+7dDBo0iJycHE6dOoW3tzdF\nRUVcuHCBiIgInJycaNCgAV26dDGIlRLPrx66efMm1tbW2NnZcfPmTUpLS+nYsSMuLi74+PjUer6a\nbUY5OTksWbKEdu3a0aVLF+04OhsbG3r27Mkbb7yh99dOcz3Ozc1l2rRpXLp0iezsbOLj41m+fDlZ\nWVl0796dP/3pT3rZc67JbdGiRRQUFFBVVUXv3r1JTk6mvLycDh060KtXr1rLzUhR/ntdgQGqrKzU\nWdMRifX7iyexJNYvKSsrY9asWUyYMKHWi6JXNZY+4r2K5wfo/hqsS88XvJcvX8bLy4uUlBTi4+P5\n7LPPaNmyJffv36eyslLvNygOHjxInz59MDY2JiYmBjs7OxRFoXv37ty7d48ffviBmTNnYm1trZN8\nKioqOH78ON9++y1NmjShVatWLF++nIcPH/Lhhx8yevRoneQhhCG4ffs2UVFRREVFUV5ezj/+8Q+8\nvLxITk6mW7duXLx4kWnTphEYGKj3Jfi/pKamho8//hiVSoWNjQ2NGjXC3t6ejIwMOnXqRGhoqM5y\nefToEdHR0XTp0oXevXvj5+fHgQMHKCgo4OuvvyYhIcFg9p0/fvyYmJgYIiIiMDMzY8qUKSxatAgf\nHx8++OADEhMTtWMede3Ro0dMnDiRYcOGkZubS0ZGBkOHDqWqqoqTJ08yY8aMWr1xYNAFuhBC/Dte\nxRsPuo6lj3i68qoely49X5xHRkZiZWVFTk4Of/3rX/nnP//JnDlzWLt2rUHMJi4rK+O9997D39+f\nyspKLC0tGTBgAKmpqZw/f54333yT5ORkBg4ciJeXl87yKi0t5ciRIxw9epTIyEjs7e21BYm+u48L\noWtffPEFarWaN954gzfffJPw8HD27t1Lp06dGDp0KM2aNdN3ij9RXFysLdCWLVtGw4YN6devH1FR\nUYSGhtKxY0cyMzPx8fHB09Oz1vJQFIU9e/ZgbGyMSqXCx8eHTZs2aaeWXL58mR9++IERI0b8JGd9\nq6yspLKyksTERLp3764dL3np0iXeeust7SonXXq+QeHFixf57rvvCAsLY9KkSYwcOZK6desSEBCA\nkZFRrb+OBrvEXQgh/l26vKi/qrH0EU9XXtXj0pXExETu3LlDixYtmDlzJv7+/kRGRnL69Gn+67/+\ni6FDh+Lr64uJiQkuLi56zbW6uhpzc3OCg4PZv38/169fJyoqiqZNm+Ls7Mzly5cJDQ2lW7duOl9O\nbmZmhpubG9XV1WzcuBEfHx+Cg4O1DdiE+CMpLS1l3759HDx4kGHDhjF8+HD69u1LixYt9L4C5+fy\n8vK4cOECRkZGGBkZceHCBezs7LQNzczMzCguLuZPf/pTrS4lr6mpISYmhpKSEiwtLdm1axfnzp3j\n4sWLDBw4UDuC8NKlSwQFBWFubl5rufwWlZWVrFixArVazdmzZzlw4ADR0dGYm5uzceNG+vbti6Wl\npU5z0mxVKCoqIj8/n7y8PFatWkVycjKLFy+mpKSEzZs3ExYWppObHFKgCyGEEOL/rLi4mO3bt2Nj\nY4OdnR3e3t6sX7+eoKAg8vPzSUxMZNq0abi7u+t1OWpVVZV2xJGFhQU9evTg3LlzPHz4kDZt2nD7\n9m22b99Or1699DYmzNTUFDc3N1QqFc2bNzeYp1tC6JqzszPffvstVVVVxMTEAM+mYhjiDavi4mL2\n799PQkICHh4eNGvWjNjYWAICAhg8eDB/+ctf6NmzZ633HJg+fTqurq58/PHHtG7dmr59+3Lt2jVO\nnDjB/fv3uXz5MidPnuSjjz7S2zVO4/l+JaWlpaSkpODv70/r1q25du0aiqKwe/du4uLi9HJj19jY\nmJycHD7++GOuXLlCaGgoZmZmZGRk0KRJEzZt2sT8+fN1Nh5RlrgLIYQQ4jdJSUlhzZo1BAQE0KZN\nGx49ekRAQACrV69m+PDhtG/fXq/5lZeXo1KpqKmpYdKkSdjY2KBSqRg0aBDr16+nuLiYhg0bEh4e\nTteuXfWaK2CQ+2qF0BXN+X/9+nV27NjB1KlTUalUBvee0DxlBdi2bRtffPEFI0aMoH///ly9epXN\nmzdTr149BgwYQEhISK3n88knnzBr1izgWV8Lc3NzCgoKmDhxIiEhIXh5edGkSRODaU5YUFBAaWkp\nLi4uZGRksGLFCtavX09OTg4mJiaYmprqbX98VVUVEyZMoHfv3oSFhWFpacnVq1e5cuUKjo6OODk5\naefI64KpziIJIYQQ4pXQtWtXTE1NWbNmDffv36dOnTqsWrWKuXPn6r04X716Nc2aNWPAgAEsWLCA\nrl27EhYWxoABA/Dy8mLBggXMnz+fYcOG0a5dO73mqmFohYgQuqQ5/21sbLhw4QL5+fkG14dB0yFd\nrVbz3Xff0a1bNwICAkhKSuLQoUP4+/szbdo0nJycsLCwqNVcFEWhuLiYtLQ0UlNT6dy5M3Xq1KGq\nqgp7e3tatWrF66+/rp23rk/P7+s+cuQIx44dw9bWlpCQELp160ZWVhbe3t56z83MzAw7OzuCgoKw\ntLSkpKSETZs2MWnSJJycnHSem+7b4gkh9GrixIkkJiZqvy4pKaFfv35cvXpVj1kJIX4vampqAOjY\nsSMfffQRmZmZ9OjRg/Xr19OrVy+95rZ48WKysrIYMGAA8KzfQL169Zg7dy5xcXE8efKErKwsPv30\nU4MpzoUQzzg4OLBlyxaDK84VRflJU8wtW7bwwQcfkJ2dTZcuXcjOziYmJoaqqqpaL87h2Q2NevXq\nMWbMGL7//nvu3LmDkZERZmZmJCcnk5mZiSEskNYUwI8ePeKrr77Cz8+PcePGMWLECHbu3MmePXtY\nvXq1XnMrKiri0qVLFBUV4ejoyPvvv8/jx49JTU0lLy9Pbz1rZIm7EH8wBQUFDB48mPXr1+Pp6cmc\nOXNwd3dn3Lhx+k5NCPE7cu/ePR49esSGDRuYNWuW3md2z549GwsLC2bMmAHAuXPnuHr1Kjt37qRP\nnz688847vPXWW8ybN88gussLIf5/hrzd45NPPqFu3brExMSQkpLC0qVLWbhwIU2aNOHJkyc625+s\nkZuby44dOyguLqZp06aYmZmxb98+5s2bh4eHh05z+bm8vDwaNWpEbm4uEyZMwM/Pj+LiYhwdHRk7\ndiympqbk5eVhZmamtxsyubm5fPDBB/Ts2ZPk5GQWLlxIUlISBQUFFBQUMG3atFrtwP8/kQJdiD+g\no0ePkpiYSExMDGvWrGHjxo1cv36dTz75BABbW1sWLlxI3bp1mTNnDjk5ORQWFhIYGMjkyZOJjY2l\nqKiIoqIi1q1bZ5BNXIQQtSc7O5slS5aQn5/P+PHjCQ4O1ms+165dY9iwYSxdupSQkBB27tzJvn37\niImJ4cyZMzx8+JD79+8zfPhwvecqhPh9eH7PeU5ODsuWLePJkyckJCRgZmbGypUradasGeHh4XrL\nsbCwkO+//54TJ07g7OxMUFCQ3kfSff7555SWltK/f38OHTpEnTp1GDNmDDdu3GDjxo3069dPL6ut\nFEXh7t27mJqaUq9ePdavX4+fnx89e/YkLCyM4OBgoqOjqVu3rraPib5IgS7EH9T06dNJS0tjx44d\nOPjkQe0AAAgOSURBVDg4MGzYMBYuXIinpye7d+/m7t27DB06lDNnzjB06FAqKioIDAwkLS2N2NhY\nvL29iYiI0PdhCCH0pKKigvLycmxsbAziqdfJkyfZsGEDTk5OlJSUMGPGDBwdHSkuLqa6upqnT58a\n3NJZIYRh0hTniqJw5MgRGjVqRGVlJefPn+f+/fuEhoayZMkSpk+frve+G4bm5MmTnD59Gnd3d65d\nu4aRkRFz5swB4NNPP6V+/fo6X7VZU1NDVFQUtra23Lp1i6CgIE6ePEmrVq24cuUKf/3rXzl8+DCm\npqYMGzZM759n0iROiD+ogQMHUl5ejoODAwA//vgj8+fPB551s2zatCm2trZcunSJ1NRUrKysqKys\n1P79pk2b6iVvIYRhMDc3187V1fcPMwA9evRAURRmzpxJVFQUjo6OqNVqLCwsMDExwdbWVt8pCiF+\nJ0xMTKisrCQ2Npb69etjYmJCeXk54eHhZGVlMXfuXG1x/vyTdvHsWmxtbc2BAwfw9PTk5s2bxMfH\n4+vry+nTp/nss890mk9NTQ2zZs2iRYsWTJ48mcuXL3P16lWMjIz48ccfadasGXfu3GHnzp0kJCQY\nxOeZFOhCCOBZwb148WKcnJzIyMjg4cOH/OMf/6BevXrExcVx+/Ztdu3apW08YggXMCGEeF5gYCDx\n8fFs2LABKysrwsLC9J2SEOJ35Pjx4xQWFtK9e3dOnjxJ8+bNefvtt3n//ffp3LkziqLwzjvv8OWX\nX3LixAk6deqkvVH5R/bee+9RU1NDixYt8Pf3x8PDgzZt2pCVlYWrqyt37twhOzubpUuX6nzsW3R0\nNAALFy4EoFWrVjRq1IgnT55QXFyMSqXiyy+/ZPny5TodpfY/kQJdCAHAvHnzmDZtGmq1GoD4+Hg8\nPDyIiYkhIyMDCwsL3NzcyMvL03OmQgjx6wIDA1Gr1axevZrOnTtTv359uaEohPhfLV26lOzsbBo3\nbkyzZs0wNjampKSEadOmMWbMGMzNzTlx4gTR0dG8/vrrHDx4kKdPn/7hC3S1Wk3Hjh35+uuvKS4u\nxsbGhrVr11K/fn2uXbtGQUEBU6dOZciQITp/raqqqujatSsXL14kIyOD9u3boygKDRo0oFGjRly4\ncIHly5dr58gbCtmDLoQQQohXTkFBAfb29vpOQwjxO7B+/Xry8vKYOXMmADdu3ODEiRN89tlnDBo0\niIiICGbPns0777xDr169UBSFqqoq6tSpo+fMDUNlZSXJycmcOHGC8ePH4+npydOnT7lx4wZXrlyh\ne/fuens6XV5ezsGDBzl27BgjRoygS5cuABw6dIj09HTt5A9DupFrMm/evHn6TkIIIYQQ4mXSxTxi\nIcTvn1qtJjk5mYCAAFxcXFixYgVLlizB0dGR8+fPU79+ffLz8xkwYAC9e/fWztCWfef/YmJigouL\nC2VlZezatQtbW1s8PDxo3LgxrVu31msPEFNTU9zd3VGr1ezfv5+mTZty/fp1tm7dSmRkJPb29gZV\nnIMscRdCCCGEEEL8QZmYmNC+fXtmz55Nt27dqKioYNu2bbi6utKwYUP8/Py0T10BjI2N9Zit4bKw\nsCA0NBQTExM2btyImZkZAQEB+k4LAJVKRf/+/TE2Nmbq1KnU1NSQkJCAu7u7vlP7RVKgCyGEEEII\nIf6w+vTpQ8uWLTE3N8fU1BQ7OzvOnz9PUlISgYGB+k7vd0OlUtG3b19MTU0NbqylJreamhpat25t\nsMU5yB50IYQQQgghhCA3N5cdO3agUqlISkrio48+okePHvpO63dHURSDWzauYci5aUiBLoQQQggh\nhPjDKy4uJikpiadPn9K6dWuDWaIt/likQBdCCCGEEEIIIQyAdDkQQgghhBBCCCEMgBToQgghhBBC\nCCGEAZACXQghhBBCCCGEMABSoAshhBBCCCGEEAZACnQhhBBCCCGEEMIASIEuhBBCCCGEAUlLS6NF\nixYcOHDgJ/8/PDyc2NjY3/S9rl27Rnp6OgBBQUFUVFS8tDyFEC+fFOhCCCGEEEIYmGbNmvHNN99o\nv7527RplZWW/+fscOnSIzMzMl5maEKIWmeo7ASGEEEIIIcRPeXt7k5WVxZMnT7C2tmbv3r2Eh4fz\n4MED9u7dy+bNm6lTpw7u7u7ExcWxb98+vv32W8rLy7lz5w7vvvsu3bp1Y8+ePZiZmeHj4wPAvHnz\nuHv3LgCrVq3CxsZGn4cphPgZeYIuhBBCCCGEAerTpw+HDx9GURQuXrxIu3btKCoqIiEhgc2bN7Nj\nxw7q1avHzp07ASguLmbdunWsWbOGxMREHBwcGDRoEBEREbRu3RqAwYMHs3XrVpydnTl9+rQ+D08I\n8QukQBdCCCGEEMIAhYeHc+DAAdLT0wkICACgpqYGT09PrKysAOjQoQM3btwAnj11B2jcuDGVlZW/\n+D19fX0BaNCgAeXl5bV9CEKI30gKdCGEEEIIIQxQkyZNKC0tZevWrbz22msAGBkZ8eOPP1JaWgrA\n2bNnadq0qfb3fs7IyIiampqffC2EMFxSoAshhBBCCGGgQkNDefDggbYIt7OzY8KECYwZM4Zhw4ZR\nWFjIyJEjf/Xv+/r6sm3bNlJTU3WVshDiBRgpiqLoOwkhhBBCCCGEEOKPTp6gCyGEEEIIIYQQBkAK\ndCGEEEIIIYQQwgBIgS6EEEIIIYQQQhgAKdCFEEIIIYQQQggDIAW6EEIIIYQQQghhAKRAF0IIIYQQ\nQgghDIAU6EIIIYQQQgghhAH4f/YggtAp29QfAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10d159668>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set_style(\"darkgrid\")\n",
    "# what are the current trends, are people still riding the CTA\n",
    "rides_by_year  = data_fe.groupby(data_fe['date'].dt.year)['rides'].mean()\n",
    "rides_by_month = data_fe.groupby(data_fe['date'].dt.month)['rides'].mean()\n",
    "fig, (ax1,ax2) = plt.subplots(1, 2, figsize=(14,4))\n",
    "\n",
    "# plot 1 - Average Rides vs. Year\n",
    "rides_by_year.plot(ax=ax1, xticks=rides_by_year.index)\n",
    "ax1.set_xlabel('Year')\n",
    "ax1.set_ylabel('Average Rides')\n",
    "for item in ax1.get_xticklabels(): item.set_rotation(45)\n",
    "    \n",
    "# plot 2 - Average Rides vs. Month\n",
    "rides_by_month.plot(ax=ax2, xticks=rides_by_month.index)\n",
    "ax2.set_xticklabels(data_fe['month'].unique())\n",
    "for item in [4, 9]: ax2.axvline(item, c='r')\n",
    "ax2.set_xlabel('Month')\n",
    "ax2.set_ylabel('Average Rides')\n",
    "for item in ax2.get_xticklabels(): item.set_rotation(45)\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Our food truck owner would be happy to note that there is generally an increasing trend of passengers taking CTA as transit, particularly during the prime seasonal revenue period i.e. between April and September. So investing in or identifying prime locations near CTA could be beneficial to the owner. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In general, a higher spread suggests that the number of riders is likely to be day (or even holiday) related. If our deviation in daily riders is large we would also possibly be less certain of our business predictions. \n",
    "\n",
    "For example, if we the standard deviation of riders per day was a significant portion of the mean riders per day, we might face multiple days in a row of far-below-mean riders and, as a result, take a real hit to our weekly/monthly business targets.\n",
    "\n",
    "Let's look at the top ten stations for daily riders -- we'd probably want to start our search with the busiest areas. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stationname</th>\n",
       "      <th>Mean_Daily_Rides</th>\n",
       "      <th>Standard_Deviation_Daily_Rides</th>\n",
       "      <th>Coefficient_of_Variance(%)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Clark/Lake</td>\n",
       "      <td>13829.990290</td>\n",
       "      <td>6676.586941</td>\n",
       "      <td>48.276151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>Lake/State</td>\n",
       "      <td>13597.645469</td>\n",
       "      <td>5674.315931</td>\n",
       "      <td>41.730136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>Chicago/State</td>\n",
       "      <td>12980.024603</td>\n",
       "      <td>3006.387373</td>\n",
       "      <td>23.161646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>95th/Dan Ryan</td>\n",
       "      <td>10747.604746</td>\n",
       "      <td>3601.879504</td>\n",
       "      <td>33.513323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>Belmont-North Main</td>\n",
       "      <td>10474.624474</td>\n",
       "      <td>2528.941058</td>\n",
       "      <td>24.143501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>Fullerton</td>\n",
       "      <td>10279.963910</td>\n",
       "      <td>3414.965472</td>\n",
       "      <td>33.219625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Grand/State</td>\n",
       "      <td>9515.082834</td>\n",
       "      <td>2520.335626</td>\n",
       "      <td>26.487795</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>O'Hare Airport</td>\n",
       "      <td>9076.607316</td>\n",
       "      <td>1949.563772</td>\n",
       "      <td>21.478992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>Jackson/State</td>\n",
       "      <td>8940.823796</td>\n",
       "      <td>3825.956571</td>\n",
       "      <td>42.791992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>Roosevelt</td>\n",
       "      <td>8445.468013</td>\n",
       "      <td>2714.077968</td>\n",
       "      <td>32.136502</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            stationname  Mean_Daily_Rides  Standard_Deviation_Daily_Rides  \\\n",
       "36           Clark/Lake      13829.990290                     6676.586941   \n",
       "140          Lake/State      13597.645469                     5674.315931   \n",
       "135       Chicago/State      12980.024603                     3006.387373   \n",
       "42        95th/Dan Ryan      10747.604746                     3601.879504   \n",
       "124  Belmont-North Main      10474.624474                     2528.941058   \n",
       "114           Fullerton      10279.963910                     3414.965472   \n",
       "31          Grand/State       9515.082834                     2520.335626   \n",
       "84       O'Hare Airport       9076.607316                     1949.563772   \n",
       "53        Jackson/State       8940.823796                     3825.956571   \n",
       "130           Roosevelt       8445.468013                     2714.077968   \n",
       "\n",
       "     Coefficient_of_Variance(%)  \n",
       "36                    48.276151  \n",
       "140                   41.730136  \n",
       "135                   23.161646  \n",
       "42                    33.513323  \n",
       "124                   24.143501  \n",
       "114                   33.219625  \n",
       "31                    26.487795  \n",
       "84                    21.478992  \n",
       "53                    42.791992  \n",
       "130                   32.136502  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Top 10 Busiest \"L\" Stations, 2001-2017\n",
    "data_pre_top_10 = data_pre[['stationname', 'Mean_Daily_Rides', 'Standard_Deviation_Daily_Rides']]\n",
    "\n",
    "def coeff_var(station_name):\n",
    "    station_data = data_pre_top_10[data_pre_top_10[\"stationname\"] == station_name]\n",
    "    return (station_data[\"Standard_Deviation_Daily_Rides\"]/station_data[\"Mean_Daily_Rides\"])*100\n",
    "\n",
    "for station in data_pre_top_10['stationname'].unique():\n",
    "        data_pre_top_10.loc[data_pre_top_10['stationname'] == station, 'Coefficient_of_Variance(%)'] = coeff_var(station)\n",
    "        \n",
    "data_pre_top_10.sort_values(['Mean_Daily_Rides','Standard_Deviation_Daily_Rides'], ascending=False).drop_duplicates().head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The results for the ten busiest stations help shed some light on our desire to understand how each station is performing. The busiest station, __Clark/Lake__, has a standard deviation almost half of its mean daily riders. It would be difficult to predict how reliable a customer flow for our business near this station could be if this was all the data we had. We want to be near these high volume stations because that should mean more customers, but we also want to find stations that have a consistent number of passengers so we can have consistent business.\n",
    "\n",
    "Looking at this table shows that __Chicago/State__ and __Belmont-North Main__ both have high total rider volumes but comparatively low variances. This would make either of these two stations more appealing all other variables being equal (which, of course, they certainly are not). Let's take a quick peek at how all 143 stations fair in this metric with a scatter plot and linear regression trend line."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### How Average Number of Daily Passengers Relates to Std. Dev. of Daily Passengers"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Look at the relationship between the mean and the std. dev. for each station's mean riders.  The Std. Dev. divided by the mean tells us the coefficient of variance, which is general guide for how consistent any given measurement is likely to be for this station."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\ne5ZNnTqViaLIGGNs+/btLDY2tl5c77zzDgsPD2czZsxgkydPZqNHj2YLFixgP//8M2OMMb1ez6ZN\nm8YSExMZY4yVlZWxe++9l8XFxbE///yT3XfffYwxxl577TX2zTffMMYY0+l0bPr06eyXX35hjDH2\n6KOPmra3cuVK9u9//5sVFRWxsWPHsvj4eNP7PXr0aJaWlsYOHz7MQkNDWXZ2NmOMsY0bN7KXXnqJ\nMcbY3XffzeLi4hhjjP3+++9s165dptd49tlnmcFgYJWVlWzcuHHs7NmzZu/rO++8wyZMmMDy8/OZ\nIAhs+fLlps+uttrtSklJYXfccYfpM/3jjz/YuHHjWHl5eb3nff/99ywsLIyNGzeOPffcc2z//v2s\nuLjY9Phdd93FLl68yBhjbObMmezLL79kjDF27tw51r9/f/bnn3/W22ZjcdX222+/sWnTpjHGGFu1\nahX75JNPGGOMGQwGtmLFCvb++++z8vJyFhYWxvLy8hhjxu/Dzp07Lb7eH3/8we655x5WWFjIGGPs\n8OHD7N5772WiKLLDhw+zRYsWNfg8e/2uP/roo+zpp59mer2elZeXs6lTp7ITJ06wgoICNnLkSNNn\n9eKLL7KDBw/We352dja7//77WUhICHv00UfZzp07WVJSkunxd955h23YsIExxtjPP//MNm3aZHps\n7dq1bOPGjfXWq/0+zps3j3300UeMMePvLDIykv3www+m9h4/fpwxxtgvv/zC7rzzzkY/t/ZEZ063\nYciQIeB5HomJifDw8IBarUZwcLDp8VOnTiEvLw8LFiwwLeM4DmlpaXjsscdw7tw5fPzxx7h58yaS\nk5PNSijVp+U9e/aEh4cHSktL4evrWy+G6lJHZWUlXnjhBcjlcoSHh9db7/Tp01izZg04joO7u7vp\nCKmyshJnz55FaWmpqWZdWVmJK1euYOjQoZBKpRg+fDgAIDg4GDzPY86cOYiIiMCUKVMaPNoHasp6\nOp0OmzZtQkpKCiZNmgQAuHnzJtLS0rBmzRrT+lVVVbh06RICAwNNy1588UWcOnUKH3zwAW7evIm8\nvDyLZwMXL16En5+f6X0MCgrCyJEjcebMGXAch8GDB6NXr14AgEGDBuHo0aMAgPvuuw9LlizBxIkT\nMW7cODz11FNm7eB5Ho6Ojujbty8KCwtN26g2depUeHp6AgBmz56NV199FStXrmw0zj///BNjxowx\n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\ndJeEEEJ0o5BMTrqu8+KLL/Z0N4QQQvSQkJzWE0IIcXWT5CSEECLkSHISQggRciQ5CSGECDmSnIQQ\nQoQcSU5CCCFCjqbUZZ39KoQQQnQZGTkJIYQIOZKchBBChBxJTkIIIUKOJCchhBAhp88lJ9M0ef75\n55k+fTqZmZkcP368p7vUjM/nY+HChWRkZDBt2jR27drF8ePHmTFjBhkZGbzwwguYpgnAmjVrmDZt\nGunp6Rw8eBCg1bY95cKFC0yYMIHi4uJeG8e6deuYPn06aWlpvPnmm70yDp/Px4IFC0hPTycjI6PX\n/Tw+++wzMjMz2+xLR/rdUtvujuPLL78kIyODzMxMnnjiCUpLSwHYsmULaWlpPPTQQ7z//vsAlJWV\nMXPmTDIyMnj66aepra1ttW13xxH0j3/8g+nTp1tfd2kcqo955513VFZWllJKqf3796vZs2f3cI+a\n27p1q8rNzVVKKVVWVqYmTJigZs2apfbt26eUUio7O1u9++67qqioSGVmZirTNFVJSYlKS0tTSqkW\n2/YUr9er5syZo+6991519OjRXhnHvn371KxZs5RhGKq6ulq98sorvTKO9957T82bN08ppdSePXvU\nr371q14Tx/r169XUqVPVgw8+2GpfOtLv1tp2dxwPP/ywOnTokFJKqc2bN6tly5ap8+fPq6lTpyqP\nx6MqKyutP//ud79T27ZtU0optW7dOvXaa6+12ra741BKqUOHDqlHH33UutbVcfS5kVN7jnjvaffd\ndx+//vWvra9tNhtffPEFd955JwApKSn85z//obCwkPHjx6NpGoMGDcIwDMrKylps21OWL19Oeno6\nAwYMAOiVcezZs4fhw4czd+5cZs+ezcSJE3tlHAkJCRiGgWmaVFdXY7fbe00cQ4cOZfXq1dbXV9rv\n1tp2dxwrV65kxIgRABiGgcvl4uDBg9x+++04nU6io6MZOnQohw8fbvRvVzCO1tp2dxzl5eW8/PLL\nLF682LrW1XH0ueTU2hHvoSQyMpKoqCiqq6uZN28eTz/9NEopNE2zXq+qqmoWS/B6S217wt/+9jfi\n4+OtX0SgV8ZRXl5OUVERq1atYunSpTz77LO9Mo6IiAhKSkq4//77yc7OJjMzs9fEMXny5EanXV9p\nv1tr291xBP/T9umnn7Jx40Yef/xxqquriY6+dApsZGQk1dXVja43jKOltt0Zh2EYLFmyhMWLFxMZ\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a3bfa4898>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def plot_all_std_cov(df):\n",
    "    Std_CoV = cll.defaultdict(list)\n",
    "    for station in df['stationname'].unique():\n",
    "        dfdaily = df[df['stationname'] == station]\n",
    "        Std_CoV[station].append(dfdaily['rides'].mean())\n",
    "        Std_CoV[station].append(dfdaily['rides'].std())\n",
    "\n",
    "    dfstd = pd.DataFrame(Std_CoV, index=['Mean_Daily_Rides', 'Standard_Deviation_Daily_Rides']).T\n",
    "    sns.regplot('Mean_Daily_Rides', 'Standard_Deviation_Daily_Rides', dfstd, ci=0, color=sns.color_palette('deep')[3])\n",
    "    plt.title(\"Mean Riders Relationship to Std. Dev. of Riders by Station\")\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "    \n",
    "plot_all_std_cov(data_pre)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see both __Chicago/State__ and __Belmont-North Main__ as the third and fifth data points from the right. In general, we want to be on the right side of the plot (more riders) and below the regression line (more consistent). These two stations fit that requirement very well while __Clark/Lake__ is nearly off the charts for its inconsistency. \n",
    "\n",
    "The overall trend is also as expected in that a higher mean correlates with a higher standard deviation. Again, this is only a simple cursory review of big picture trends for all stations in the elevated train system, but it would give us a first step in identifying areas to consider for our business."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Criteria Exploration"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Let us explore some criteria of the business owner \n",
    "    - Weekends and Holidays - overall\n",
    "    - Weekends and Holidays during the time period of April-August\n",
    "- We have a few initial key stations that meet our business owners criteria (holidays/weekends, April-August).  As well as there are some stations with dense traffic on weekdays also fulfilling the same criteria."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nvfdITEzEbDbTokUL1qxZQ4ECBQBo2bIlbdq0IWfOnHz77be4u7vz5ptvPnQeb29vatSogb29PZGR\nkRQtWjTFel599VX++9//4unpyZ07d4Ck6wyuWrWKevXqAf80ju9fwn3hwgVj9qQahCIiIpISk9ls\nNmd0ESIiIiKSdfzyyy906dIFOzs7jh07pptiiIiIiFg5zSAUERERkXRlmWFXpkwZNQdFREREMgE1\nCEVEREQkXT3urtEiIiIiYl20xFhERERERERERMSGaQahiIiIiIiIiIiIDVODUERERERERERExIap\nQSgiIiIiIiIiImLD1CAUERERERERERGxYWoQioiIiIiIiIiI2DA1CEVERERERERERGyYGoQiIiIi\nIiIiIiI2TA1CERERERERERERG6YGoYiIiIiIiIiIiA1Tg1BERERERERERMSGqUEoIiIiIiIiIiJi\nw9QgFBERERERERERsWFqEIqIiIiIiIiIiNgwNQhFRERERERERERsmBqEIiIiIiIiIiIiNkwNQhER\nERERERERERumBqGIiIiIiIiIiIgNU4NQRERERERERETEhqlBKCIiIiIiIiIiYsPUIBQRERERERER\nEbFhahCKiIiIiIiIiIjYsOwZXYCkr3v3YomMjMnoMjKck1MOjcP/p7FIonFIkpnGwdU1T0aXIM9Q\nZsgra/97sfb6wPprVH1Pz9prfF71KbOyLmvNK2v927PWusB6a1NdaaO60ubBuh6VV5pBmMVkz54t\no0uwChqHf2gskmgckmgcxFpkhveitddo7fWB9deo+p6etddo7fWJ9bPW95DqSjtrrU11pY3qSpu0\n1KUZhFlMxMLVGV2CVYjI6AKsiMYiicYhSYaMw+vtMuKsYuUyQ15Z++eGtdcH1l+j6ruPPqtFUmSt\neWWtn1/WWhdYb20P1aXPY8kgmkEoIiIiIiIiIiJiw9QgFBERERERERERsWFqEIqIiIiIiIiIiNiw\nLNMgvHLlCkOGDMHHx4euXbvi5+dHZGQkAD4+Phw9epR58+axenXya0h4e3sTHBycrrVs376datWq\nERISYjz2xRdfcPLkyXQ7R0REBFu2bEm344mIyPOhvBIRkcxAeSUiYluyRIMwOjqad955h379+rF8\n+XLWrFmDp6cnI0aMAMDFxYVChQo9t3rWrVtHjx49WLt2rfHY22+/TdWqVdPtHGfOnGHv3r3pdjwR\n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\nTZs25fDhw/zyyy/GY5cvX+b69etcvXoVk8kEwMaNG8mTJw+zZ8+mb9++REdHYzabAYxtLEqUKMG5\nc+eIjo4mISGB06dPA0nT7Rs1agTAtm3bWLhwIQDZsmXD3d3dCDyTyYTZbObAgQP89ddffPzxxwwf\nPtw4p52dHYmJiQCULVuWkSNHsnz5cj788ENatGjx7AZLREQyjPJKREQyA+WViEjWYVMzCHPnzo2/\nvz+zZ89m1qxZxMfHkz17diZNmsSOHTuM7erWrcvw4cP56aefyJUrF6VKlSI0NDTFYxYoUIChQ4fS\ntWtXChQoQK5cuYCkYCxdujQA7777LpMmTaJdu3bkypULR0dHpkyZAkD16tV577338Pf3Z/78+Xh7\ne+Pg4ECJEiUIDQ2lZMmSBAUFsWTJEkaPHo2fnx8xMTFER0fj6+v7bAdMREQyhPJKREQyA+WViEjW\nYTJbvrqRLOHwF20yugQReUD5DqszugSDs7MjERFRGV3GE3F1zZPRJcgzpLwSyTwelWPWnivPqz5l\nVtalvBJr9Dz+fWGtn++qK20erOtReWVTS4xFREREREREREQkOTUIRUREREREREREbJhNXYPQFtTq\ns8kqp7U+b9Y6vTcjaCySaBxErEtmyCtr/9yw9vrA+mtUfSLyONaaV9b6+WCtdYH11matdYnt0QxC\nERERERERERERG6YGoYiIiIiIiIiIiA3TEuMsZtOK1hldgojVathmXUaXICL/n/JKxHooH0VSp7wS\nkdRktfzUDEIREREREREREREbpgahiIiIiIiIiIiIDVODUERERERERERExIapQfj/HT16lGHDhqXb\ndhaLFi3iyJEjnDx5kr59+9KnTx969erFokWLAIiJiWHdukevWz927BiBgYFPfE4REcm6lFciIpIZ\nKK9ERDIXNQifsZ9++omaNWsyceJEfH19Wbx4MQsXLmTbtm388ccf3Lhx47EBtmHDBkJDQ59TxSIi\nYouUVyIikhkor0REng3dxfgRvv32W1auXGn8PHfuXOO/7927x+DBg2nXrh2vvfYas2fP5tixY5jN\nZnr37s2rr77KnTt3cHR0xN7enqJFi7Jy5Uo6duxIpUqVWL16NQ4ODowfP55z587x2Wef8frrr+Pn\n50dMTAwREREMGjSIIkWKcPDgQU6dOkX58uX59ddfWbJkCXZ2dtSsWZORI0dmxNCIiIgVUV6JiEhm\n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\nosRTHVdERP6hvFJeiYhkBsor5ZWIiLV5bINw+vTpLF68mHz58nH79m3q1avH+PHjWbhwITVq1Hge\nNaZo7dq1ODo6snbtWi5cuMCkSZP48ssvOXXqFKNGjaJFixbGtsHBwaxbt47OnTuneryYmBgAcubM\nSfny5Vm+fDmQFDaDBg2iaNGiNGnS5F/Xmy9fPuOYAGvWrGHx4sW8//77//qYIiLyD+WV8kpEJDNQ\nXimvRESs0WOXGG/cuJFu3bqxadMmzGYz9vb2lCtXjilTpjyP+lJ17tw5GjRoAEDZsmU5f/48AKdO\nnWLDhg10796dadOmER8fz+eff865c+f47LPPANizZw+9evWiXbt27N27F4DDhw/j5eX10Hns7e3p\n2bMn27dvB2D27Nn06dMHb29vxo4dC8C8efMYPXo0/fr1o1WrVhw8ePCx9V+7do28efPy/fff85//\n/Md4vGvXroSGhrJixQp69uxJ9+7d6d+/P7GxsWzcuJGhQ4fSv39/Xn31VTZu3PgUIygikrUor5RX\nIiKZgfJKeSUiYo0e2yDMnj07uXLlwmQyAeDg4EDLli25cOHCMy/uUSpVqkRAQABms5lffvmFkJAQ\nEhISqF+/PhMmTGDlypVERUWxZs0aBgwYQPny5Rk8eDAAhQsXZunSpYwbN47Vq1cDsG/fPho1apTi\nuVxcXAgPDycyMpK8efOyePFi1qxZY5wXksZl4cKF+Pr6smTJkoeOcevWLXx8fOjQoQONGzcmJiaG\nt956i/r16xMUFMStW7c4d+4c+fPnx8XFhYiICJYsWcKqVauIj4/nt99+AyAyMpIFCxbg7+/PF198\nkf4DKyKSSSmvlFciIpmB8kp5JSJijR67xPi1115j6dKlXLlyBZPJxJEjRwgICKBixYrPo75UderU\nifPnz9OzZ09q1KhBlSpVyJYtG506dSJv3rwANG3alJ07dz4UTFWqVAGSgik6OhqA69evU7RoUYKD\ngx8619WrVylSpAg5cuQgLCyM4cOH4+joSFRUFHFxcUBSoAIUKVKE2NjYh45hmQKfkJDAmDFjsLe3\nJ3fu3EDSGG/dupXg4GBef/117OzssLe3N85z/fp14uPjAYxxd3NzS/E8IiK2SnmlvBIRyQyUV8or\nERFr9NgZhMOHD6dr167s27cPs9nM4sWLiY+P58MPP3we9aXqt99+o2bNmixfvpxmzZpRokQJzGYz\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11344d1d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\nN27g6urKl19+yZdffomrqysxMTHkypULADc3NypWrEipUqVYuXIlH374IQcOHMDJyYncuXPz+++/\n88knn7B79+4HjtPixYvZvXs3Dg4OXLlyhYkTJ7Jt27aHngfrdu7u7ri7uyf7nfUy8b///htIugTa\nepm69VgNHTqUKVOmEBwcTKFChbh58yYbN27kk08+ASA8PNzYb86cOfHw8MDLy8s45nFxcfTq1Yu4\nuDg6dOiAyWR6YAxrxuvXrzN37lwsFgvh4eEsXboUPz+/B87jo85tYmKicT4KFy5M3bp1yZEjxwPr\nXblyhXfffZcVK1YQHh5OkSJFuHLlCt999x2DBw9+YP8Wi4XOnTtz8eJFEhMTOX/+PCNHjnzocRcR\nERF5GDUIRUREJFVMnTqV+Ph4Bg0aRK5cuYxGj/VSUrjbzHNxcWHNmjVs2bKF8ePHA0kzxqKjo4mP\nj+f06dNA0qy3TZs2sXXrVjw8PB5oqISHhxuNpMfdJ85isTB58mRMJhMjRozAwcEhxYxwtzmUUtPn\npZdewtHRkd27d7N161YcHByYM2cO27ZtY9SoUUYDzZrHup2jo2OyS3itsxCtY2zatAmAQYMGsWnT\nJvbs2UOLFi1o1aoVN2/exGw207dvXwAKFCjAjz/+SLt27VJ8rS4uLowePRqTyURUVBQzZsygXr16\nTJ06laioKGO9ESNGULBgQSBpNuCqVau4fv06o0ePxmKx0L59e3bv3s2uXbto3rw5FouF2bNnA3Dj\nxg0uXboEQN26ddm5cye//PILb7zxBgDr1q176LlIqQFrZZ31Z7FYgKTGbGJiIlmzZsVsNmOxWPj5\n558BWLZsGZs2bWLdunU0aNCA119/ncjISNq2bUvDhg0BaNCgAT/++COenp7GuQgJCWH06NFs376d\nAQMGPDDGvRmLFy/O1q1b2bFjhzHbcsOGDUDSTEbrg3HubybD3XM7Y8YMsmZNurPP2LFj+e6774AH\nm4ujR48mJCSEokWL8vPPP7N582bjeK9fv9443tbtoqOjGTZsGDt27DBmMF65cuWhx11ERETkYdQg\nFBERkef2+++/s3nzZmrVqmXcx8062+3e5pu16eLt7W00Yu6979uVK1cICgoyLuEcPnw4xYsXN35v\nbbxYZwta95cjR47HPqBk48aN/PHHH7Rp04bKlSs/NGNiYqLRvEup6WMde+PGjUDS5cNvvvkmAG3b\ntsXR0RG42yC0ZixXrpwxiyw4OJgbN24Ad5tDpUqVAuDbb79l1KhRHDt2jEmTJjFixAjjWB0/fjxZ\nhkdp1aoVAQEB1KlTB4CoqChmz55N165djSdL3759mwsXLjzwumJiYsiTJw9DhgzB0dERBwcH4zxZ\nj431dUHSjL7s2bPj6OhI48aNgUc3qlJqwFpZm2AFChQA7h73MmXKkC1bNkwmk3He+vXrx8yZM0lM\nTMTPz48vvvjCuKTa2oy+t3Fs3VfTpk1p06bNA8utY1gsFqMJ9+mnnxpN1LfffhvAuJT55MmTRkPz\nUQ3CoKAgozFrXRYZGWm81vLly3Pjxg127NgBwIABAyhWrBgAderUIU+ePEDSPRrhboOwadOmRpPY\nZDIBpOmDZkRERCTjUINQREREntvkyZOBpEt4zWYzZrOZtm3bAhAREUFYWBjXrl0jJCQEgNq1axvb\n3vu02mzZshnNFVdXV2M2GiTNLDtz5gzw4GWgnp6eZMmSBX9/f1q2bGn8s864i4uLY/r06QCsXr3a\nyPjpp58CSQ1C64y1CxcupPhwivtnvVlz1qxZ01gnISHBuLfe/TMI722G3Xt/O2vzqX///rRs2ZLb\nt2+zZMkS3n//fZo3b55ig/VJ77dYqVIlvv/+e3788UfjcuSjR4+yZ88eI1tiYiKOjo689NJLAMYx\nrl69unEZN8C1a9cAjAaotQFXokSJZE1c6/m0NkPvFx0dbVzSfX+DMDExkV9++cUY35rx/nWnT5/O\na6+9xvnz55kxYwbNmjWjR48extOo4+LijFmo1u3uff80b9482bj3j3HvA0ruvYzbuszahLRuV7x4\ncXLnzg0kn9Vq3Z/1vBUtWpS8efMCdy9Ztx77s2fPGveNvPfelzExMdy6dQtIOvaJiYlGo/Bf//rX\nA68hpVmZIiIiIo+jBqGIiIg8lx07dnDo0KFHrnPu3DmjoQSQPXt247937doFJDUEixQpYjRTqlSp\nkuypxGfPnjUe1GBtgtx//8HNmzdz8uRJ45+rqyuQ9ORf6z3mUhIVFWU0L60z5FxdXSlcuDCQNGPs\n7NmzwN2mj7VZlC9fPmM/Bw4cIDExkezZsxuXE1sbifc2bqwNunuXOTs7M3HiRHbt2sXQoUMpWrQo\nZ8+eZfTo0cY6989MS8nXX39NnTp1kt2zzsPDgzlz5hjH3fparcf6pZdeMhp61gbnvecIMBp31rGt\nx/7+9azn82EZAwMDU3xACSQ1b//++29MJhMtW7YEUm58lS1blsWLF7Nx40Z69OhBjhw52LFjBwsW\nLADuvldMJpMxxr3vn6pVqyYb9/4x7p0daZ29d+9rq1ixovFa7s9mPbf3zmpNacakdVnZsmVxcnIy\njonJZErWXN21axeJiYmYTCY8PDw4f/68MRuxSpUqD+xPDUIRERF5FmoQioiIyDNLTExk6tSpAIwc\nOZITJ04k++fl5QUkzci6t0H43//+F0h6AMSsWbMAaNOmDSaTyWi63H9PQWsTp1ixYkbTxtoUsa7r\n7+/PqVOnjH8jR47k9u3bxhjff//9Axnd3NyAuw8qsT5QpGjRokDSvfAmTJhAYmIiWbJkMS73tc78\n27JlCxaLhbCwMCZOnAgkNeSs95yzziaz7i8wMJC1a9cCdxubAwYMoFatWsyYMcN4IEuDBg0AjGbQ\n1atXuXnzJnD3cuSUuLm5ERISwvbt2/nrr7+M5YcOHTJm2FWqVAm4O1vw3oefWF/fnj17jEtpN2zY\nwPbt2wHo2LFjsmMfFBTEsWPHgKQG7f79+zGZTLRu3TrFfNbtXFxcjMtoAbZu3crYsWMBaN26NRUq\nVEh2j79XXnmFsLAw2rdvT9WqVdm3bx9ly5alV69exkNjrMfKOnswX758uLi4AMnfP9ZZfMADY9yb\nEeDHH380trc+4dj6pOX7z+3NmzeZOXMmkPQesDa4UzrO9zd7y5UrR9asWbFYLKxevRpIauRa31MN\nGjSgYMGCxnb58uUzGtgxMTFGA/tJZ5eKiIiI3CtregcQERER+7V27VpOnz6Nm5sbrVu3NppiVsWK\nFePo0aOcO3fOuNddvnz58Pf3Z8eOHYSFhREVFUWpUqXo1asXFovlgXv9Wd3fULn3Us5HNUV++OEH\nrl+/jqenp3E/vvszXrt2jXPnzlG7dm2j6RIYGMiYMWM4deoUR44cAZI/PblJkyYcOnSIjRs38ttv\nv3Hz5k2jQWWdYQZJT629cOECM2fOZN++faxZs8a4nNk626tq1aps2LCBmTNnGs0h6z38OnToAGDc\nNxCge/fudOvWzXhoxr3eeecdFi5cyF9//UXTpk0pUqQIiYmJxrHq1KmTMa511trWrVtp0aIFq1ev\npnXr1syfP5+rV6/y1ltvkS9fPi5fvgwk3WOxUaNGyZ7MnCdPHjp16kTRokWNc/zvf/8bDw+PFM+H\ntfkWGxtLq1atSEhI4Nq1a4SHhwNJl/T6+voCSY21uLg4TCYTnp6eODs7U6hQIY4ePUq3bt0oWbIk\nERERREREkDNnTt55551kr+v69es0adKEsWPHPvR9df8Y92b08PBg2LBhzJ49mytXrhAfH0/dunVp\n2rSpcW4hqYmYJUsWNm/ebJy3e2fyWfMsXbqUY8eO4e/v/8Blzfny5eO9995jyZIl+Pr6MnfuXEJC\nQoiLi6Nw4cKMGDECuNvovPd1nDx5kvj4eLJkyfLQ4y4iIiLyKJpBKCIiIs8kJiaGGTNmAEkPHcmW\nLdsD61jvTXfvJcYDBw7k3//+N5GRkZhMJpo3b87ixYtxdnbm0qVLxj3s7r9U8mGXgWbPnp0yZcqk\nmPHatWvMnz8fgA8//DDFdayz2KwzCJs0aULz5s3Jnj07P//8M2az2dj23kwdOnSge/fu5M2bl/j4\neLp162Y8IOLeS1hHjBhB8eLFOXv2LMePH2fy5MnGZbnW5lCXLl2YMGEClSpVIjIyklu3blGxYkWm\nTZtmzFYrVqwYH374IXny5OHmzZvJZt/dy8XFhYCAALp3707x4sUJDQ0lLCyMihUrMmbMGIYPH26s\n261bNzw8PDCZTOTKlQsnJyfy5MnD8uXLad68OTly5ODatWu8/PLLDBs2jDFjxgB3Ly92dHRkyZIl\nVK1alcuXL1O0aFEGDx7MZ599lmI2uHveYmJiOHnyJOfOnSMhIYHXXnuNMWPGMG/ePOO9dO89/qz3\n/Zs8eTK9e/emVKlShISE4ODgQJ06dfD39zcu627cuDF16tQhR44chIWFUapUKWNf9zfQ7h/j3geU\nfPvtt7Ru3ZqwsDBcXFzo3r07M2fONB4I0qNHD6pUqUJkZCTbtm2jc+fOxj0L772c+D//+Q+lSpUi\nLi4ONzc3YmNjjffbve8pHx8fBg4caLw2V1dX2rVrR0BAgDFjNaVGp/V8lClT5oFLvkVERESehMli\n/QpbRERE5AX5559/jAeObNiwwWjk2KvDhw8TEBBAgQIF6NGjB87Ozuzbt4+uXbvi6OjInj17jPsf\nZkRz5sxhypQpVKxYkVWrVqV3HBERERF5TrrEWERERF4466yxnDlzPnS2nz3Jly8f69evJyEhgYCA\nAPLly2fc769Vq1YZujkId2es3X+fSBERERGxT7rEWERERF44a0OpfPnyyZ5MbK/KlCnDtGnT8PLy\nMu7vV7x4cXr16mXcPy8ju//hMCIiIiJi33SJsYiIiIiIiIiISCZm/1/hi4iIiIiIiIiIyDNTg1BE\nRERERERERCQTU4NQREREREREREQkE1ODUEREREREREREJBNTg1BERERERERERCQTU4NQRERERERE\nREQkE1ODUEREREREREREJBNTg1BERERERERERCQTU4NQREREREREREQkE1ODUEREREREREREJBNT\ng1BERERERERERCQTU4NQREREREREREQkE1ODUEREREREREREJBNTg1BERERERERERCQTU4NQRERE\nREREREQkE1ODUEREREREREREJBNTg1BERERERERERCQTU4NQREREREREREQkE1ODUERERERERERE\nJBNTg1BERERERERERCQTU4NQREREREREREQkE8ua3gEkdUVHxxIZGZPeMR7J2TmbTWdUvudn6xlt\nPR/YfsZnzefu7vIC0oi9s8XaZWufQVvLA7aXydbygO1lsrU8YB+ZVLskJbZYu1Jii5+xh7GXrMqZ\nupQzdVlzPkvt0gzCDCZr1izpHeGxbD2j8j0/W89o6/nA9jPaej6xL7b4frK1TLaWB2wvk63lAdvL\nZGt5QJnEftnL+8RecoL9ZFXO1KWcqet5cmoGYQYTMXdZekd4rIj0DvAYyvf8bD2jrecDO8j4Ucf0\nTiAZiC3WLlv7DNpaHrC9TLaWB2wv0xPnebfli4whkiHYYu1Kia39HXoUe8maLjn1d1nSgGYQioiI\niIiIiIiIZGJqEIqIiIiIiIiIiGRiahCKiIiIiIiIiIhkYhmmQXjp0iX69OmDt7c3HTp0wNfXl8jI\nSAC8vb05cOAAM2bMYNmy5PeKaN++PcHBwamaZePGjVSuXJmQkBBj2Zw5czh27FiqjREREcG6detS\nbX8iIpL2VLtERMTeqHaJiGRMGaJBeOfOHf7zn//w0Ucf4e/vz/Lly/Hy8uKzzz4DwM3NjQIFCqRZ\nnpUrV9KlSxcCAgKMZR9//DGVKlVKtTFOnTrF9u3bU21/IiKStlS7RETE3qh2iYhkXBniKca//PIL\nr732Gl5eXsay1q1bs2zZMi5dusSwYcPImzfvI/dx9epVfH19iYmJISIigl69etGoUSOaN29OqVKl\ncHJyYuTIkfj4+BAeHg7A0KFDMZvNyfZz6dIlbty4wSeffELr1q3p0aMHjo6ODBo0iGbNmnHt2jVW\n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\nJCYmAlCmTBkGDhyIv78/I0eO5K233npxB0tERGyCapeIiNgb1S4REfuTqWYQ5sqVCz8/P6ZMmcLk\nyZOJj48na9asjB49mk2bNhnr1apViwEDBvDrr7+SI0cOSpYsSWhoaIr7zJcvH3379qVDhw7ky5eP\nHDlyAEkFsFSpUgD069eP0aNH07JlS3LkyEHOnDkZO3YsAFWqVOGLL77Az8+PWbNm0b59e5ycnChe\nvDihoaGUKFGC06dPs2DBAr788kt8fX2JiYnhzp07+Pj4vNgDJiIi6U61S0RE7I1ql4iI/TFZrF/R\nSIawb07z9I4gInagXOtlz7W9q2tOIiKinno7d3eX5xpXMibVLpGM4Vlqy7PWkxfp/kyqXZIS1S6x\nZeVaL7PJv68pUc7UZc35LLUrU11iLCIiIiIiIiIiIsmpQSgiIiIiIiIiIpKJZap7EGYG1br9aPPT\nXm19aq7yPT9bz2jr+cA+MoqkFlusXbb2GbS1PGB7mWwtD9heJlvLI2LPbLF2pcSePvf2ktVecoo8\nLc0gFBERERERERERycTUIBQREREREREREcnE1CAUERERERERERHJxHQPwgzmx8Vvp3cEkQyvbvOV\n6R1BJENR7RKxDapvIk9OtUskc8hMtVEzCEVERERERERERDIxNQhFREREREREREQyMTUI/78DBw7Q\nv3//VFvPat68eezfv59jx47RvXt3unXrxgcffMC8efMAiImJYeXKR09ZPXToECdPnnziMUVEJHNQ\n7RIREXuj2iUiYpvUIHzBfv31V1599VVGjRqFj48P8+fPZ+7cuWzYsIE///yTf/7557GFavXq1YSG\nhqZRYhERyexUu0RExN6odomIPB89pOQRfv75Z5YsWWL8/PXXXxv/HR0dTe/evWnZsiXvvPMOU6ZM\n4dChQ1gsFrp27UrTpk25desWOXPmxNHRkSJFirBkyRLatGmDp6cny5Ytw8nJiaFDh3L27FlmzpzJ\nu+++i6+vLzExMURERNCrVy8KFSrE7t27OXHiBOXKlePo0aMsWLAABwcHXn31VQYOHJgeh0ZERGyU\napeIiNgb1S4RkfSnGYSPcOHCBebMmYO/vz+lS5dmz549AERFRdGjRw86derEO++8w86dOwkODmb5\n8uUsWrSI7777jps3b7J7925ef/11AMaNG0f+/Pnx9fWldu3aTJgwgdjYWHr06EG5cuXo3bs3586d\n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\nBQsyduxYcubMSUhICFWrVk1xDIDChQuneF8RERF5fqpdyal2iYjYPtWu5FS7RESeXJrMIPzpp59o\n27Yt8+bN44cffiAgIIC9e/fi5ORk/OE/fvw4kFQAjh07RmJiIlFRUZw9ezbZvg4cOECBAgWYN28e\nPXv2ZOrUqZQpU4Zjx44RHx+PxWLh0KFDRiGxFh2rkiVL4u/vj7+/P+3atUv2uy5duhAREcH+/fsB\nKFu2rDHNPS4ujiNHjlCyZMkH9muxWIz/vn+8lJhMJurWrYuvry+NGjVK9ruhQ4cybtw4xo8fT4EC\nBZLt+2nGEBGR56PalZxql4iI7VPtSk61S0TkyaXJDMKVK1cyceJE4+ccOXLQuHFjChUqxJdffkmu\nXLnIlSsXefLkwdPTkyZNmvDuu+9SoEAB8ufPn2xfHh4e9O/fn4ULF+Lg4ECvXr0wm800bdqUjh07\nkpiYyKuvvkqjRo04efLkU+U0mUyMGzfOmHpev359Dh48yHvvvUdcXBxNmjThlVdeeWC7smXLMnDg\nQGrXrv3EY7Vo0YK2bdsyatSoZMtbtmxJ+/btyZ07N25uboSGhj7VaxARkdSh2vUg1S4REdum2vUg\n1S4RkSdjsqT0VYnYrW+WvJXeEUQyhI6NV6Xr+K6uOYmIiErXDI/yrPnc3XVzb3mQapdIxvW4emqL\n9e7+TKpdkhLVLnlWafX/Gbb49zUlypm6rDmfpXal2UNKRERERERERERExPakySXGknZ6tt9o811t\nW++8K9/zs/WMtp5PJLOxxdpla38nbC0P2F4mW8sDtpfJ1vKI2DNbrF0psafPvb1ktZecIk9LMwhF\nREREREREREQyMTUIRUREREREREREMjE1CEVERERERERERDIx3YMwg/l4/dvpHUHEZkx8Y2V6RxCR\nJ6DaJZI5qU6LPVPtEnunv8FyP80gFBERERERERERycTUIBQREREREREREcnE1CAUERERERERERHJ\nxJ6oQfi///2P0aNHM3ToUIKCgvjnn3+eaOcHDhygVq1aeHt706VLFzp06EBQUNAj1+/fv/+TJX8K\nMTExrFyZ8vX1ZrOZrVu3Gj/v2rWLQYMGPfG+Dx06xMmTJwF4/fXXH7nuoEGDqFatGrGxscayEydO\nYDabOXDgwEO3Gzt2LJcvX37iTCIiotr1KKpdIiK2SbXr4VS7RERerMc2CCdMmEDfvn1Zv349q1ev\n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\nl31R7RK5S3Uu81Ltsi+qXfK89PdebM1jG4QA8+fPJ3v27DRp0oTSpUtTtWpVqlat+qKziYiIPDPV\nLhERsTeqXSIikl4e2yDcvXs3cXFxfP3113zzzTfkyJEDDw8Pypcvz9ChQ9Mio4iIyFNR7RIREXuj\n2iUiIunpsQ3C33//naCgIGN6e2BgIKdOneLIkSMqVCIiYpNUu0RExN6odomISHp6bIMwS5YsuLu7\n4+7uTsuWLY3lISEhLzRYejpw4AD9+vWjXLlyANy+fZtixYoxefJknJyc0jVbgwYN2LRpE9evX+fk\nyZM0aNAgXfOIiNgi1S7VLhERe6PapdolIpKeHtsgXLBgARMnTsRisZA/f35eeeUVypQpQ2JiIoMH\nD06LjOmiZs2aTJs2zfj5s88+Y/v27TRp0iQdU921f/9+zp07p0IlIpIC1a4kql0iIvZDtSuJapeI\nSPpweNwKc+fOpVy5cjRt2pQ7d+6wf/9+5s+fz6JFi9Iin02IjY0lNDSUPHnyMH78eNq1a0e7du1Y\nuHAhAMHBwXzwwQd07tyZLl26cPLkSQAGDRpEp06daNu2LRs3bgTg4MGDdOzYkS5dujB48GDi4uLo\n3bs3Bw8eBODYsWP07NmTuLg4hgwZQufOnenYsSMHDhww8iQkJDBnzhzWr1/Ptm3b0vhoiIjYPtUu\n1S4REXuj2qXaJSKSnh47g/D27dt06dKFxo0bc+XKFebOnctHH31E48aN0yJfutm/fz/e3t5cv34d\nBwcH2rdvz507dwgODiYgIID4+Hg6depEzZo1+fbbb/H29qZRo0YEBgYyZMgQFi1axIEDB1i9ejUA\ne/fuxWKxMGzYMJYuXUr+/PmZPn06a9eupV27dqxdu5bq1auzdu1a2rdvz8qVK8mbNy/jxo0jPDyc\nLl26sGHDBiDp8oOPP/6Yc+fO0bBhw/Q8TCIiNkm1S7VLRMTeqHapdomIpKfHziCsXLkyCxYsIGfO\nnJw5c4bY2Fhq1arFggUL0iBe+qlZsyb+/v4sWbIER0dHihUrRlBQENWqVcNkMuHo6IiXlxdBQUEE\nBQXx2muvAeDp6cnVq1dxdnZm2LBhDBs2jP79+xMbG0tYWBihoaH069cPb29v9u7dy+XLl3nzzTc5\nfvw4ERERHD58mDp16nD69Gl27dqFt7c3n376KfHx8YSHh6fzURERsQ+qXapdIiL2RrVLtUtEJD09\ndgbhqFGj6N+/Py4uLnh6etKoUSOio6MpXrx4WuRLd3nz5mXSpEm8//77fPHFF2zbto2uXbsSF/f/\n2LvzuKrqxP/jrwuC7KCCgIqKoIKYo2iZuZvjFI2aOFiamMtkzliZZqllaqYomVpqWY6WW2qaS2aO\nuTKUuablCormriCyGGZ55j8AACAASURBVCogcH9/9JP5OkK4APdceD8fDx917z33nDcf9Lzhcz/3\n3Jvs37+fbt26ERAQwN69e3n88cc5evQonp6eJCUlcfjwYT766COysrJo27YtnTt3xsfHh48//hhX\nV1e2bNmCk5MTNjY2PPHEE4wbN46OHTtia2tLnTp18PHxYdCgQWRmZjJ79mzc3d3zc9nY2JCXl2fB\nkRERMS51l7pLRMTaqLvUXSIillToBOHx48cJCAjAz8+Pr776CoApU6Ywe/ZssrKy6N+/f6mFtLTA\nwEAiIyPZunUrNWrU4JlnnuHmzZs88cQThISE8MYbb/D222/z2WefkZOTw8SJE/Hy8uLy5cs8/fTT\nODk50b9/f+zt7XnrrbcYOHAgZrMZZ2dn3nvvPQC6d+9Ox44d+e677wB49tlnGT16NL179yYjI4Ne\nvXphY/PfBZ/16tVj9uzZhISE8NRTT1lkXEREjEbd9V/qLhER66Du+i91l4iI5ZjMZrO5oAeCgoJw\ndHSkfv36NGzYkJCQEEJCQggMDLzthCnGErZ6gqUjiJSoBa2GPPA+PDycSEu7XgxpSo7RM95vPi8v\n1xJI81/qLuuk7hL5r+LoucIYsVusIZO6Swqi7pIHVZLnezDm+bUgylm8buW8n+4qdAXha6+9xpEj\nRzh8+DBffPEFZrMZk8lExYoVCQoKomHDhowePfqBgouIiBQndZeIiFgbdZeIiBhBoROEL7zwQv7/\n//bbbxw6dIgFCxYQExPDzz//zC+//KKiEhERQ1F3iYiItVF3iYiIERT5ISUpKSmsXr2alStXcvLk\nSUwmE48++ih/+9vfSiOf3KOv/zrK8Mtejb40V/kenDVklLJN3WVdjNhdRjuPGS0PGC+T0fKAMTOJ\ncam7rIsRu6sg1nQespas1pJT5F4VOkEYExPDV199RUxMDLm5ufj6+jJ48GDCw8OpXr16aWYUERG5\nK+ouERGxNuouERExgkInCAcNGoTJZALgz3/+My+88AJBQUHY2dmVWjgREZF7oe4SERFro+4SEREj\n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\ngQMHAPj4449xc3Nj6dKlZGdns2HDBqZNm8aCBQtYvXo158+fp2rVqsTFxQGwZ88eateuDYDJZLoj\nz48//shjjz0GwIIFC/JfDbO3t6du3brY29vnPzcvL49Vq1bh6urK1KlT6d+/P5mZmZjNZmxsbPKv\nleHv7090dDSLFi3i9ddfzy9CERGxTuouERGxNuouEZGyqcysIOzXrx8TJkygYsWKdOvWDV9fXyZO\nnMinn36Kr68vqamp2NjYMHbsWF588UVsbGxo0KABDz30UP4+Ro8eTUREBC1atMDd3Z2uXbvi7u5O\ny5YtqVatGhMmTODdd9/FbDZja2tLVFRUgVlu3rxJbm4uzs7OALzzzju88847LFmyBAcHBypVqsS4\nceOA319xGzhwIGPGjGHYsGH89NNPODo6UqtWLZKSkqhXrx6zZ88mJCSEcePGMWLECHJzcwGYOHFi\nyQ6qiIiUKHWXiIhYG3WXiEjZZDKbzWZLh5Dis39ukqUjiMHU6OpY6sf08HAiLe16qR/3bhk9Hxg/\n4/3m8/LSBb7lTuqusq20esiI502jZTJaHrCOTOouKYi6S4yu4fNVDHd+LYgRe6Ag1pbzfrqrzLzF\nWERERERERERERO6dJghFRERERERERETKsTJzDUL5nTUsIzb60lzlExEpXUbsLqOda42WB4yZSUSk\ntBixuwpiTedqa8lqLTlF7pVWEIqIiIiIiIiIiJRjmiAUEREREREREREpxzRBKCIiIiIiIiIiUo7p\nGoRlzJUPf7V0hCJdsXSAIlh7PtvnvUslh4hIcTFidxmtC4yWB0omkzpMRKyFEburIEbsj8JYS1bl\nLF7K+cdK82cjrSAUEREREREREREpxzRBKCIiIiIiIiIiUo5pgvD/O378OAMHDiQyMpLu3bszY8YM\ndu7cydChQ+96Hy1btizw/iFDhpCQkECPHj3uaj/nzp27621FRKR8U3+JiIi1UXeJiBiPrkEIXL16\nlWHDhjFz5kxq165Nbm4uQ4YMwcvL64H3nZWVBYCDg8MD70tEROT/Un+JiIi1UXeJiBiTJgiBLVu2\n0Lx5c2rXrg2Ara0t0dHR7N+/n927dwOwePFiNm7cSE5ODq6ursycOZN169axcuVK8vLyeOWVV/L3\nN23aNH777TfGjBnDjh07aN68eaHH3r17N7NmzQIgMzOT6Oho7OzsAMjNzWXkyJHUrVuXgQMHsmjR\n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\nfPnll3z00UecPn0ad3d3Vq9eDdRerLZt2xZLS0u8vb1RKBSEh4ezfft2QkJCnnkeXcyka3mg9iC2\nKVOm8Mknn7Bw4UJSU1Pp2bMn3377LVB7EWxtbY2zszN+fn5kZmYyduxYEhISNNMVz5LU6PfpYo2E\ndigUCkrY3MtFAAAgAElEQVRLSxkwYAAvv/wyM2bMYMuWLdy7dw8bGxsCAgIoLi5mzpw5LFiwgNLS\nUpydnXUi5+bNmzXXDObm5uzatYvp06ezdOlS7t27p7XJLLVazc6dOykrK9M0W/X09DAyMiIoKIiy\nsjLNvzUDA4MGvYb5vZxGRkbU1NTg4eGBl5cXhw8fBtCsKAAafIKwuLiYsLAwPD09mThxIuXl5dTU\n1GBsbExwcDA2NjZ89NFHzJ07l7t37+Lm5tag+f5I1pqaGkxNTdm1axfvvvsuS5Ys4ebNm1rb2+/u\n3bu89dZbvPLKK7i7u9O4cWPUajVGRkZ07doVa2trTU3v3buntZr+c06lUqm51nqaesoS4xeAqakp\nfn5+uLm5MXbsWLy8vLQdCajdyHnOnDlYWVnh5OTEkiVLGDFiBOnp6dy/fx8vLy8MDQ1JTEwkNDQU\nf39/0tPTMTIyYt68eZiZmTVo3ri4OL744gtOnz6NqakphoaGlJaWYmZmhr29PQ4ODqxZs4ZFixZx\n8OBBkpOTWbVqFe7u7nTt2hUDA4N6fVPQ9Xz37t1j3LhxFBcXk5mZSUZGBo8ePcLCwgK1Wk2zZs1Q\nqVQsXryYDz/8EHNzc2JjY8nKymL27NnY2NjUW7bnId/zkFHX84nnj669f9XtHVQ3od23b1/y8/PZ\ntm0bY8aM4bPPPuPVV1/F2tqaiooKsrKy6NGjBx07diQzM5MOHTowevToeskWGxvLo0eP+Prrr7Gy\nsmLVqlVMmDCB9evX4+HhgbOzMxUVFZw9e5YhQ4YQFBREmzZtePfdd2nSpMmfIpOu5YF/PIhNrVaz\nZMkSZs2axa5du3B2dsbZ2ZmioiJOnjzJ+PHj6dKlC+7u7owfP75epmmlRr9PF2sktOPf7Zd78+ZN\njh07xssvv4yVlRWBgYEoFAqUSiVz587VypY+v5dTT0+Ppk2b8vjxY8zNzZk7d2693Mj6X7LOmjWL\n3bt3Y2dnh5OTk+aGm4eHB0eOHOGHH36gZcuWDB06VKdy1i01zs7O5ttvv2XXrl14enryzjvvaCWj\n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\nUMQigQ8AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a3bf9eeb8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def calc_daytype_metrics(df_in):\n",
    "    daytype_weekend = df_in[(df_in.dow == 'Saturday') | (df_in.dow == 'Sunday')]\n",
    "    rides_weekend = daytype_weekend.groupby('stationname')['rides'].sum().sort_values(ascending=False)\n",
    "    daytype_weekday = df_in[df_in.daytype_Weekday == 1]\n",
    "    rides_weekday = daytype_weekday.groupby('stationname')['rides'].sum().sort_values(ascending=False)\n",
    "    daytype_holiday = df_in[df_in.daytype_Holiday == 1]\n",
    "    rides_holiday = daytype_holiday.groupby('stationname')['rides'].sum().sort_values(ascending=False)\n",
    "    frame = rides_holiday.to_frame().join(rides_weekend.to_frame(), lsuffix='_holiday', rsuffix='_weekend')\n",
    "    frame = frame.join(rides_weekday).rename(columns={'rides':'rides_weekday'})\n",
    "    return frame\n",
    "\n",
    "def explore_daytypes(df_in, title):\n",
    "    fig, ax = plt.subplots(1, 3, figsize=(18,5))\n",
    "    for axi, col in zip(ax.flatten(), df_in.columns):\n",
    "        data = df_in[col]\n",
    "        xlabel = col.split('_')[1]\n",
    "        sns.barplot(data[:15], data[:15].index, orient='h', ax=axi)\n",
    "        axi.set_ylabel('Station Name', fontweight='bold', fontsize=12, style='italic')\n",
    "        axi.set_xlabel(xlabel, fontweight='bold', fontsize=12, style='italic')\n",
    "        for item in axi.get_xticklabels(): item.set_rotation(30)\n",
    "    plt.suptitle(title, fontsize=16, fontweight='bold', style='italic')\n",
    "    plt.subplots_adjust(top=0.10, bottom=0.075)\n",
    "    plt.tight_layout()\n",
    "\n",
    "df_cta_daytype_metrics = calc_daytype_metrics(data_fe)\n",
    "\n",
    "# Total Station Distribution Across different types of days: {Holidays, Weekends, Weekdays}\n",
    "explore_daytypes(df_cta_daytype_metrics, title = \"Overall Station Stop Distribution\")\n",
    "\n",
    "# Station Distribution across time frame of April-August (Prime Period)\n",
    "month_filter = ['April', 'May', 'June', 'July', 'August']\n",
    "\n",
    "df_cta_prime = data_fe[data_fe['month'].isin(month_filter)]\n",
    "df_cta_prime_metrics = calc_daytype_metrics(df_cta_prime)\n",
    "explore_daytypes(df_cta_prime_metrics, title = \"April-August Stop Distribution\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Central Connecting Stations\n",
    "There are some stations that can be considered as **central hubs**: many different lines have stops connected at the station from different lines.  These should be looked at further to determine if the traffic aligns with the criteria posed by the business owner at probable locations."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATION_NAME</th>\n",
       "      <th>DIRECTION_ID</th>\n",
       "      <th>MAP_ID</th>\n",
       "      <th>NUM_JUNCTIONS</th>\n",
       "      <th>STATION_AS_HUB</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>Clark/Lake</td>\n",
       "      <td>E</td>\n",
       "      <td>40380</td>\n",
       "      <td>6</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>Clark/Lake</td>\n",
       "      <td>W</td>\n",
       "      <td>40380</td>\n",
       "      <td>6</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>Clark/Lake</td>\n",
       "      <td>S</td>\n",
       "      <td>40380</td>\n",
       "      <td>6</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>Clark/Lake</td>\n",
       "      <td>N</td>\n",
       "      <td>40380</td>\n",
       "      <td>6</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>280</th>\n",
       "      <td>Washington/Wabash</td>\n",
       "      <td>N</td>\n",
       "      <td>41700</td>\n",
       "      <td>5</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          STATION_NAME DIRECTION_ID  MAP_ID  NUM_JUNCTIONS  STATION_AS_HUB\n",
       "88          Clark/Lake            E   40380              6            True\n",
       "89          Clark/Lake            W   40380              6            True\n",
       "90          Clark/Lake            S   40380              6            True\n",
       "91          Clark/Lake            N   40380              6            True\n",
       "280  Washington/Wabash            N   41700              5            True"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# which stops are the most connected, and noted as central hubs\n",
    "# alternatively we can look at the transition vertices (stations) as an edge list\n",
    "# We would like to know the junction points, only given via the descriptive name (e.g. State/Lake)\n",
    "# Define a Hub as\n",
    "def extract_junctions(sta_descriptive):\n",
    "    # summing over the lines themselves does not give us the number of true changeover points\n",
    "    sta_name, junctions = sta_descriptive.split('(')\n",
    "    junctions = junctions.rstrip(')').replace('&',',').split(',')\n",
    "    n_junctions = len(junctions)\n",
    "    return n_junctions\n",
    "\n",
    "n_hub_threshold = 3\n",
    "df_cta_info_fe = data_info_cl.copy()\n",
    "df_cta_info_fe.loc[:,'NUM_JUNCTIONS']  = df_cta_info_fe['STATION_DESCRIPTIVE_NAME'].apply(extract_junctions)\n",
    "df_cta_info_fe.loc[:,'STATION_AS_HUB'] = df_cta_info_fe['NUM_JUNCTIONS'] >= n_hub_threshold\n",
    "cols = ['STATION_NAME', 'DIRECTION_ID', 'MAP_ID', 'NUM_JUNCTIONS', 'STATION_AS_HUB']\n",
    "df_cta_info_fe[cols].sort_values(by=['NUM_JUNCTIONS', 'STATION_NAME'], ascending=False).head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Marginal Daily Riders"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "While the average number of riders per day is nice to know, it is also an unspecific, aggregated value in some regards. We'd ideally like to know more about rider patterns. One thing that would be helpful to know is if \"this station is growing or shrinking in daily use.\"\n",
    "\n",
    "If a station is, say, only the 10th most frequented stop in the city, but has grown year-over-year for the last six years, then that is an encouraging sign that setting up a new business near this stop would be viable going forward. Conversely, a stop that has decreased annually might halt our process of setting up a new truck in this location.\n",
    "\n",
    "We could use the overall ranking as a good guide for this growth or shrinkage, but to properly measure this we would need to compare the number of riders per station to the overall average for each year, giving us the marginal growth or reduction per station. If the population of Chicago is growing as a whole, then we'd expect most stops to increase, and vice versa. So, we need to understand how each station is growing relative to the average level of growth.\n",
    "\n",
    "With this in mind, I calculated the marginal daily riders by year for all train stations. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_all_marginal_rides():\n",
    "    \"\"\" Find the marginal values in mean riders for each station by year.  \n",
    "    This helps us locate which stations are growing or shrinking in use compared \n",
    "    to the average number of riders per station by year.  \n",
    "    This is a slow function b/c of the nested loop and insert loop into dfmarginal at the end.\n",
    "    INPUT: none\n",
    "    OUTPUT: df with the marginal values per station by year\n",
    "    \"\"\"\n",
    "    dfmarginal = pd.DataFrame(index=['Year_Mean']+data_pre['stationname'].sort_values().unique().tolist(), columns=data_pre['date'].dt.year.sort_values().unique())\n",
    "    for year in data_pre['date'].dt.year.sort_values().unique():\n",
    "        dfyr = data_pre[data_pre['date'].dt.year == year]\n",
    "        yr_mean = dfyr['rides'].mean()\n",
    "        for station in dfyr['stationname'].sort_values().unique():\n",
    "            dfstat = dfyr['stationname'] == station\n",
    "            dfyr.loc[dfstat, 'Avg_Year_Daily_Rides'] = dfyr.loc[dfstat, 'rides'].mean()\n",
    "            dfyr.loc[dfstat, 'Marginal_Rides'] = dfyr.loc[dfstat, 'Avg_Year_Daily_Rides'] - yr_mean\n",
    "            dfgroup = dfyr.groupby('stationname').mean()\n",
    "        dfmarginal.loc['Year_Mean', year] = yr_mean\n",
    "\n",
    "        # Every station isn't in operation every year, so we have to check station by station to insert values into our final DF\n",
    "        for name in dfgroup.index:\n",
    "            dfmarginal.loc[name, year] = dfgroup.loc[name, 'Marginal_Rides']\n",
    "    return dfmarginal\n",
    "\n",
    "def plot_marginal(df, cols):\n",
    "    \"\"\"Plot the marginal values for a list of given stations along with the overall \n",
    "    \"L\" system mean as a dashed line.\n",
    "    INPUT: df, names of stations\n",
    "    OUTPUT: line plot showing marginal growth or shrinkage\n",
    "    \"\"\"\n",
    "    df = df.T\n",
    "    fig = plt.figure(figsize=(10, 10))\n",
    "    kwargs = dict(lw=2.5, marker='o', ms=6, mec='k', mew=1)\n",
    "    for col in cols:\n",
    "        plt.plot(df[col], **kwargs)\n",
    "    plt.plot(df['Year_Mean'], color='k', ls=':', lw=1.5, marker=None)\n",
    "    ymin, ymax = plt.ylim()\n",
    "    plt.yticks([x for x in range(int(ymin), int(ymax)) if x % 1000 == 0])\n",
    "    plt.title(\"Marginal Daily Riders Each Year by Station\")\n",
    "    plt.xlabel('Year')\n",
    "    plt.ylabel('Marginal Daily Riders')\n",
    "    plt.legend(loc='upper left')\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "    plt.close()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here are the marginal daily rider values for the top five most used stations overall"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10b717400>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dfmarginal = get_all_marginal_rides()\n",
    "top5 = ['Clark/Lake', 'Lake/State', 'Chicago/State', '95th/Dan Ryan', 'Belmont-North Main']\n",
    "plot_marginal(dfmarginal, top5 + ['Ashland-Lake'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are a few things to note from this plot.\n",
    "\n",
    "1. __Clark/Lake__ has the highest average number of daily riders from 2001-2017, but since 2010 it has been trailing the #2 overall station, __Lake/State__ each year. Further, __Lake/State__'s daily rider count has grown -- the key focus of this plot -- at a higher rate than any other station over the last four years, making it more appealing as a potential area to set up a business.\n",
    "\n",
    "2. __Lake/State__ and __95th/Dan Ryan__ saw massive dips in passenger numbers in 2005 and 2013, respectively. Had undergoing construction during these years stalled operations in these stations? If so, as business owners we might consider stations that have been refurbished in recent years to be more valuable as they are likely to be newer, aesthetically more appealing and require less maintenance in the future. This is highly speculative, but is worth noting. Without plotting this it is unlikely we would have caught these two exceptions.\n",
    "\n",
    "3. Recall that __Chicago/State__ and __Belmont-North Main__ had two of the three lowest variances of the top ten most used stations (__O'Hare__ is the lowest, but we are considering setting up the business within the city and not the airport). The trend suggests __Chicago/State__ and __Belmont-North Main__ to be more stable than the others. It seems less riskier to open an establishment closer to __Lake/State__ as opposed to __95th/Dan Ryan__ that has observed a downward trending slump for a decade\n",
    "\n",
    "4. The \"L\" train system appears to be gradually growing in use with time, up from under 3,000 daily riders per station in 2001 to nearly 4,000 in 2016. \n",
    "\n",
    "While considering the most viable train station location for our business, using this data would prove to be invaluable. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Train Line Analysis\n",
    "Based on using the prior criteria of the business owner (e.g. time of year)\n",
    "- Do some lines not have enough daily records? (Lines P and Y have a majority less than others)\n",
    "- Which lines have fewer/more stops than others? (fewer stops may not allow for maximizing patrons)\n",
    "- How do the riderships compare?\n",
    "- Central Hubs, Number of of Junctions (Closer to a junction would benefit ridership)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of Total Lines: 143\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>daily_records</th>\n",
       "      <th>num_hubs</th>\n",
       "      <th>num_junctions</th>\n",
       "      <th>num_stops</th>\n",
       "      <th>avg_rides</th>\n",
       "      <th>total_rides</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>line</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>BLUE</th>\n",
       "      <td>86029</td>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>33</td>\n",
       "      <td>3693</td>\n",
       "      <td>317734252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>RED</th>\n",
       "      <td>83350</td>\n",
       "      <td>3</td>\n",
       "      <td>39</td>\n",
       "      <td>32</td>\n",
       "      <td>5738</td>\n",
       "      <td>478277546</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>G</th>\n",
       "      <td>70283</td>\n",
       "      <td>5</td>\n",
       "      <td>52</td>\n",
       "      <td>30</td>\n",
       "      <td>2568</td>\n",
       "      <td>180553669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BRN</th>\n",
       "      <td>67722</td>\n",
       "      <td>10</td>\n",
       "      <td>66</td>\n",
       "      <td>27</td>\n",
       "      <td>4243</td>\n",
       "      <td>287398840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pexp</th>\n",
       "      <td>65130</td>\n",
       "      <td>11</td>\n",
       "      <td>68</td>\n",
       "      <td>26</td>\n",
       "      <td>4277</td>\n",
       "      <td>278570565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pnk</th>\n",
       "      <td>52082</td>\n",
       "      <td>8</td>\n",
       "      <td>54</td>\n",
       "      <td>22</td>\n",
       "      <td>3062</td>\n",
       "      <td>159511001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>O</th>\n",
       "      <td>39075</td>\n",
       "      <td>9</td>\n",
       "      <td>47</td>\n",
       "      <td>16</td>\n",
       "      <td>5135</td>\n",
       "      <td>200652562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>P</th>\n",
       "      <td>23455</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>9</td>\n",
       "      <td>1609</td>\n",
       "      <td>37755760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Y</th>\n",
       "      <td>5213</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3707</td>\n",
       "      <td>19325407</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      daily_records  num_hubs  num_junctions  num_stops  avg_rides  \\\n",
       "line                                                                 \n",
       "BLUE          86029         1             38         33       3693   \n",
       "RED           83350         3             39         32       5738   \n",
       "G             70283         5             52         30       2568   \n",
       "BRN           67722        10             66         27       4243   \n",
       "Pexp          65130        11             68         26       4277   \n",
       "Pnk           52082         8             54         22       3062   \n",
       "O             39075         9             47         16       5135   \n",
       "P             23455         1             11          9       1609   \n",
       "Y              5213         1              5          3       3707   \n",
       "\n",
       "      total_rides  \n",
       "line               \n",
       "BLUE    317734252  \n",
       "RED     478277546  \n",
       "G       180553669  \n",
       "BRN     287398840  \n",
       "Pexp    278570565  \n",
       "Pnk     159511001  \n",
       "O       200652562  \n",
       "P        37755760  \n",
       "Y        19325407  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Determine lines that are most active based on number of stops and activity on a line \n",
    "# Also based on the previous criteria from the business customer\n",
    "def calc_lineinfo(df_riders_in, df_info_in):\n",
    "    df_lines_agg = pd.DataFrame()\n",
    "    agg_cols = ['NUM_JUNCTIONS', 'STATION_AS_HUB']\n",
    "    lines = ['ADA','RED', 'BLUE', 'G', 'BRN', 'P', 'Y', 'Pnk', 'Pexp', 'O']\n",
    "    n_lines = df_info_in.groupby('MAP_ID')[lines].agg(lambda x: np.sum(x)).shape[0]   \n",
    "    for line in lines:\n",
    "        df_line = df_info_in[df_info_in[line] == True]\n",
    "        df_junc = df_line.groupby('MAP_ID')[agg_cols].agg(lambda x: ( np.unique(x)[0]) )\n",
    "        df_line = df_line.groupby('MAP_ID')[lines].agg(lambda x: np.sum(x, axis=0)).astype(np.bool)\n",
    "        df_line = df_line.reset_index()\n",
    "        df_line_m = df_riders_in.merge(df_line, left_on='station_id', right_on='MAP_ID')\n",
    "        n_line_stops, n_line_records = (df_line.shape[0], df_line_m['date'].count())\n",
    "        n_line_rides, n_avg_line_rides = (df_line_m['rides'].sum(), df_line_m['rides'].mean())\n",
    "        n_junctions, n_hubs = (df_junc['NUM_JUNCTIONS'].sum(), df_junc['STATION_AS_HUB'].sum())\n",
    "        line_dict = {'line':line, 'num_stops':n_line_stops, 'daily_records':n_line_records,\n",
    "                     'total_rides': n_line_rides, 'avg_rides': n_avg_line_rides,\n",
    "                     'num_junctions': n_junctions, 'num_hubs': n_hubs}\n",
    "        df_lines_agg = df_lines_agg.append(line_dict, ignore_index=True)\n",
    "    df_lines_agg = reorder_cols(df_lines_agg.set_index('line', drop=True).astype(int), '_rides')\n",
    "    return n_lines, df_lines_agg\n",
    "\n",
    "n_lines, df_line_agg = calc_lineinfo(df_cta_prime, df_cta_info_fe)\n",
    "print('Number of Total Lines: {}'.format(n_lines))\n",
    "df_line_agg.sort_values(by='daily_records', ascending=False).drop('ADA',axis=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>daily_records</th>\n",
       "      <th>num_hubs</th>\n",
       "      <th>num_junctions</th>\n",
       "      <th>num_stops</th>\n",
       "      <th>avg_rides</th>\n",
       "      <th>total_rides</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>daily_records</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.270207</td>\n",
       "      <td>0.898532</td>\n",
       "      <td>0.999262</td>\n",
       "      <td>0.082527</td>\n",
       "      <td>0.960361</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_hubs</th>\n",
       "      <td>0.270207</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.658309</td>\n",
       "      <td>0.282161</td>\n",
       "      <td>0.314648</td>\n",
       "      <td>0.289840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_junctions</th>\n",
       "      <td>0.898532</td>\n",
       "      <td>0.658309</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.905538</td>\n",
       "      <td>0.148670</td>\n",
       "      <td>0.857159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_stops</th>\n",
       "      <td>0.999262</td>\n",
       "      <td>0.282161</td>\n",
       "      <td>0.905538</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.067670</td>\n",
       "      <td>0.952974</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_rides</th>\n",
       "      <td>0.082527</td>\n",
       "      <td>0.314648</td>\n",
       "      <td>0.148670</td>\n",
       "      <td>0.067670</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.332010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_rides</th>\n",
       "      <td>0.960361</td>\n",
       "      <td>0.289840</td>\n",
       "      <td>0.857159</td>\n",
       "      <td>0.952974</td>\n",
       "      <td>0.332010</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               daily_records  num_hubs  num_junctions  num_stops  avg_rides  \\\n",
       "daily_records       1.000000  0.270207       0.898532   0.999262   0.082527   \n",
       "num_hubs            0.270207  1.000000       0.658309   0.282161   0.314648   \n",
       "num_junctions       0.898532  0.658309       1.000000   0.905538   0.148670   \n",
       "num_stops           0.999262  0.282161       0.905538   1.000000   0.067670   \n",
       "avg_rides           0.082527  0.314648       0.148670   0.067670   1.000000   \n",
       "total_rides         0.960361  0.289840       0.857159   0.952974   0.332010   \n",
       "\n",
       "               total_rides  \n",
       "daily_records     0.960361  \n",
       "num_hubs          0.289840  \n",
       "num_junctions     0.857159  \n",
       "num_stops         0.952974  \n",
       "avg_rides         0.332010  \n",
       "total_rides       1.000000  "
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Computing Pearson Correlation Patterns\n",
    "df_line_agg.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n6tTh3XffpWrVqqSlpWG1Wnn55ZeB9JkCtiK1fv36fP755zRs2JBr165RrFgx/vGPf/DFF1/g5eWV\n7bYhvQD+9NNPeeGFF6hQoQJnz56lRIkSdOjQgS+//JJy5cpx4cKFTI90u/kY2ZbdvI+EhARzRD00\nNJS///3vXLx4ER8fH3r27Mm8efOyvf4c/roxX3R0NJA+om47ziEhIdnenMw2Q+HmKe7Dhw+nX79+\nxMTEYLFYeOqpp/jyyy8pWbIkp0+fNq9Jz3jiImN7bj7Z4O3tnePI8eXLl81Hvtlu6ncz2zX1tjg7\ndOjAU089hbe3Nxs3bsRqtZrvzRhTjx49ePHFF7n33ntJSUmhT58+5nFq2LChud64ceOoUqUKUVFR\n/O9//2PGjBnmFH/b5/mf//wnoaGh1KtXj5iYGG7cuMEDDzzArFmz6Nq1qxnnSy+9xD333MP169fx\n8/MjNjaWFStWUKVKFfOO7iIiIhlZjIwX74mIiIhTOHToEN27d8fNzY39+/dnOjGQG61atQLSrzvP\nq0uXLpk3fPv2228zPW7MFf38888sW7aM++67jwEDBlCyZEl2795N79698fT0ZOfOneb17wVp6tSp\nLFiwgE8++cTsHxERkYw0xV1ERMQJ2Uac/f3981ycQ/pd35cvX27elf1O9u3j41MorpMuU6YM33zz\nDampqSxbtowyZcqYTxXo2rWrXYrzgwcPsmjRIkJCQlSci4hIjjTFXURExAllvPP7nejcuTOQfqfy\nO913nTp1sr1LvKupUaMGs2bNon79+qSlpXH27FmqVKnCoEGDGD9+fIHv/8qVK7z22ms0btyYkSNH\nFvj+RETEdWmKu4iIiIiIiIgTcP3T4iIiIiIiIiKFgAp0ERERERERESegAl1ERERERETECahAFxER\nEREREXECKtBFREREREREnIAKdBEREREREREnoAJdRERERERExAmoQBcRERERERFxAirQRURERERE\nRJyACnQRERERERERJ6ACXURERERERMQJqEAXERERERERcQIq0EVEREREREScgAp0ERERERERESfg\n4egACkJ8fBIxMYmODqPIKlmymI6/g6kPHE994HiFpQ/Kly/l6BAKXFHO24Xlc3on1Ha1vahR24tG\n2+82bxfKEXQPD3dHh1Ck6fg7nvrA8dQHjqc+cB1Fua/U9qJJbS+a1HbJjUI5gt5k9GJHhyAiIi5u\n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\nf/WrX+nLL7+UJB08eFBBQUE2rsh6QkNDlZKSIkn68ssv1alTJxtXVPMyMzP1/PPPa8qUKXr66acl\nOf+4N2/erMTEREmSj4+PDAaDwsLCnHrMf/3rX/XBBx8oKSlJISEhio+PV48ePZx6zJL08ccfW957\ne/78eeXm5qpOnTo6efKkzGaz9uzZ43Tj7tixo7766iuZzWbLmLt27er05/qbb75Rt27dJF1rTj09\nPZ36PFfElbO7qsrKQZSvrDxp0qSJrcuyW2U9J/v5+dm6LLtUv359y01d7777bhUVFam4uNjGVdk/\nZ3/dXpMMZidZv1J6J9gffvhBZrNZcXFxTn1HxdOnT2vSpEn66KOPdPz4cUVHR6uwsFCtW7fWvHnz\nnO69afPmzdM///lPtW7d2rJt5syZmjdvntOOOycnR9OnT1dmZqaKior0wgsv6IEHHnD6c10qKipK\nMTExcnNzc/oxFxQUaPr06Tpz5owMBoNeeeUVubm5KS4uTsXFxYqIiNDEiRNtXWaNW7BggVJSUmQ2\nmzVx4kT5+/s7/bleuXKlPDw8NHLkSEnXmlJnP8+342rZXR1l5eCKFSu4AVollOYJf1u3d/NzMm8P\nKFt2drZmzJihCxcuqLCwUCNGjGBFSzlcrV+pKU7ToAMAAAAA4MicZok7AAAAAACOjAYdAAAAAAA7\nQIMOAAAAAIAdoEEHAAAAAMAO0KADsHuZmZm2LgEAAACodTTogBUNHz5cRqNR6enplm0xMTEKDg7W\nzz//XGP7+eabb2Q0GvXee+/V2O+8WUFBgcLCwjRq1Kha3Ud8fLxWrlwpSfr+++9lNBq1fPnyWtsn\nAADV5eh5f/z4cRmNRsXExFi2Xbx4UUajUWPHjrVZXYAroEEHrKS4uFgmk0mS9PHHH1u2p6amqlWr\nVqpXr16N7Ss1NVWS1L59+xr7nTczmUwqLCxUWFhYre1j7969WrVqlYKCgiRJdevWVUxMjB5//PFa\n2ycAANXhDHl/6NAhSdKvfvUry7YDBw5IUqVy3xqvQwBnRYMOWMmxY8eUm5srSdqyZYsKCgpUVFSk\n9PR0tW3bVpI0ZswYPfjggyoqKpIkjRo1Su3bt1dJSYk2b94so9GoRYsWKTIyUl26dNHu3bu1cOFC\nderUSQMGDNCFCxckXQtWg8GgDz74QB07dtTw4cN19uxZSb/MSnfr1k1dunRRfHy8zGazJGnYsGEa\nMmSIZs+erfbt21t+piyl4R0WFqZLly7JaDRq5syZkq4tSTcajZozZ44kacKECerQoYPWrFmjvn37\nqnv37tq/f7/ld61evVp9+vRRhw4d9OKLL+rq1avasWOH5Sr99OnTdfDgQb311luKjY1V06ZNVVxc\nrHOKzn0AAAkJSURBVISEBEVERKhDhw4aNWqUTp06Zfmd3bt31+9//3vNnj1b4eHhGjRokGWp/OHD\nh/W73/1OHTp0UPfu3ZWYmFidUwsAgIUz5H1pg92hQwfLtm+//VaS1LZt2wpz/3Z1Xbp0SZMnT1Z4\neLg6deqkyZMnKy8vr4bPAuC4aNABKykNu//5n/9RVlaWduzYoaNHjyo/P98S2GlpaWrTpo08PDwk\nXZulNhqNcnNzs1yN//TTTy2/4+WXX9aJEyfUrVs3HTlyRLt377bsy2w2y9PTU08++aQOHDigJUuW\nSJLi4+O1Zs0aPfnkk4qMjNSqVau0bds2lZSU6IcfflB6eroyMzP1+uuv67777qtwPGFhYUpLS5Mk\nBQcHS7rWAEtSSEiIZVw5OTnauXOnHn30UWVmZuqDDz6QJC1dulRvvPGGwsLC9Oyzz+rTTz/V0qVL\n1aJFC8uxiImJkdFolMlkUmBgoDw9PbVkyRItW7ZM7dq10x/+8AcdPHhQL730kiTpwoULyszMVHJy\nsoqKitSxY0eZTCZt375dkjRu3DhdvHhRL774ovz9/bVo0SLLeAAAqA5nyPvSi/D9+vWT0WiU0WjU\nqlWrJEmhoaEV5v7t6po/f7527typ0aNHq0ePHvrHP/6h9evX1/RpAByWh60LAFxFaWC/+uqr2rNn\njzZu3KjIyEhJv1yN/u9//6uIiAhJ165GZ2Zmql+/fpKuhbm7u7sSExPVqFEjLV++XAEBAVq8eLG2\nbt2q7du3y8/PT9nZ2frxxx/Vo0cPxcXFSZL27dsnk8mkn376SR9++KH69OmjkSNHSpK2bdum/fv3\ny2g0Kjc3Vw899JCWLFkid3f3CsfTuHFj3Xffffrkk08k/RLUpS8uQkJClJubq5MnT+r++++3vHd8\n1apV8vHxUX5+vlauXKm2bdtq8eLFMhgMatWqlVq0aCGj0ai8vDw98MAD+s1vfqOff/5ZGRkZ6tKl\ni3Jzc7V69WqFhobqnXfekcFg0OXLl7Vq1SqdP3/esv8BAwYoLi5Ou3fv1o4dO+Tt7a2SkhJduXJF\nvr6+uv/++7Vy5Up5eHjIx8enRs4zAMC1OXrem81mHT58WC1atFCPHj0s29euXavGjRuradOm2rp1\nq6Syc/92dUnS5cuXZTAYdPfdd2vOnDmKjo5WgwYNavYkAA6MGXTASlJTU9WsWTO1bNlS/fv31759\n+/TZZ5/JYDCobdu2FV6NNplMatu2rVq0aKEffvhB0rWr8waDwfKzRqNRaWlpKikpUe/evS37Likp\nkZeXl44eParCwkLt2LFDPXv2VM+ePZWVlaX8/HxLcA4fPrzC5jw/P19Hjx7Vgw8+KEk37L/0azc3\nNwUFBclkMqmkpERPPPGEfHx8dPToUUlSYGCgTCaTcnJy9Mgjj8hgMEiShg4dqvDwcF29elWnT5++\nYfylx+fEiRPKy8u74efy8/Mt9ZU+dujQoZJk2WebNm3k5uamN998U/n5+Ro3bpz69eunr776qhJn\nEACAijl63h87dkzZ2dnq16+fZs+erdmzZ2vUqFEym803rAAoraP069Lcv11dkjR16lQZjUbNmjVL\n3bt315o1a2rgqAPOgwYdsIKSkhKlpaVZgm3IkCEqKSnR7t271bJlS9WrV09HjhyR9EvYlS5fCwkJ\n0dmzZ5WVlWX5+dIwL735SlpamurVqyd/f3/LsrTS0D1y5IhOnjyp9u3by9vbW5L03HPPadmyZfrz\nn/+st99+W88//7wlsMu6oUtJSYmio6MtIXrw4EEVFhYqPDzcso9mzZqpfv36ysvLU3Jysu6//375\n+PhYQrxdu3aSfplZCA0NVXFxsSSpcePGkqRdu3bp7bff1n//+1+ZTCaZzeYblsmXHo/SZtzT01PS\ntffZ7dq1S02aNFHTpk0tLxRKLyCkpqbK3d1dQUFB+s9//qOGDRtqx44dlvG88cYblT6XAACUx9Hz\nXvolp0vrk3658B0aGmrZV3m5f7u6zp8/rzNnzmjdunX65JNPFBYWpmXLlikjI+NODzngdFjiDljB\n8ePHlZOTYwnczp07q1WrVjpx4oRlW05OjqRr4fvjjz9q/fr1lqvRX3/9taRfgrG0Wb3+65CQEBkM\nBqWmpuquu+7Su+++q59//lkbNmyQt7e3fvvb3+ree++Vv7+/du3apcaNG2v79u06evSotm3bJpPJ\nJB8fHwUEBNxSv5ubm3bu3Kldu3bJbDZr69at8vb21oABAyRJubm5ys3N1b/+9S+99957unTpkrp2\n7Srp1lC/fqbAy8tL9erV07p165Sdna1Vq1apQYMGevHFF5WcnCzp2sWAH3744YYZdG9vbzVp0kRJ\nSUny8vJScnKyzpw5o9jYWMvxaNWqlXx9fSVde7HRunVreXt7KzY2VikpKYqKilLdunWVnZ1dq3ei\nBwC4DkfPe+mX95+X1aCXjuF2uX+7ujZt2qSEhAT1799f7dq10/nz51W/fn01atSohs4A4PiYQQes\n4PpZ41JDhgyR9EvYDRw4UPfff7+WLVum77//XiEhIZar0de/t0u61uQ2b95cfn5+ysjIUFZWlmWp\nXGpqqnr27KmBAwdq6dKl8vLy0v/+7/+qZcuW8vLy0tKlS9WgQQO98847Ki4u1ooVK9S0aVOZTCYF\nBQXJza3sp4XY2Fj5+voqISFBhYWFWrJkiWXme9SoUSooKNDMmTMtY7z+fWmNGzdWkyZNLPU1bdpU\nDRs2VN26dbVw4UKVlJQoMTFRDz74oFauXClPT0917NhRAQEB2rlzp3766SeZTCY1b95c9evXl5eX\nl9599121atVK77zzjk6cOKGZM2fq6aeftrznvfRYZWdn68SJE5Z64uPj1atXL23cuFGrV69WRESE\npbEHAKA6nCHvU1NT5eHhocDAQMu20s9zLx3D7XL/dnWNHj1azz33nP7973/rz3/+sxo2bKh3333X\nMuMPQDKYSz9vAQAAAAAA2Awz6AAAAAAA2AEadAAAAAAA7AANOgAAAAAAdoAGHQAAAAAAO0CDDgAA\nAACAHaBBBwAAAADADtCgAwAAAABgB2jQAQAAAACwAzToAAAAAADYgf8Pp9fFsQL6iqkAAAAASUVO\nRK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10ff64240>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot Information about ridership and travel lines\n",
    "fig, ax = plt.subplots(3, 2, figsize=(14,9))\n",
    "labels = ['Number of Daily Records Acquired', 'Number Stops', \n",
    "          'Number of Total Rides', 'Number of Avg Rides',\n",
    "          'Number Junctions', 'Number Hubs']\n",
    "cols = ['daily_records', 'num_stops','total_rides', 'avg_rides', 'num_junctions', 'num_hubs']\n",
    "for axi, col, xlabel in zip(ax.flatten(), cols, labels):\n",
    "    # Maintaining the same y-axis for consistency rather than sorting by value\n",
    "    data = df_line_agg[col].drop('ADA',axis=0)\n",
    "    sns.barplot(data, data.index, orient='h', ax=axi)\n",
    "    axi.set_ylabel('Station Line', fontweight='bold', fontsize=12, style='italic')\n",
    "    axi.set_xlabel(xlabel, fontweight='bold', fontsize=12, style='italic')\n",
    "    for item in axi.get_xticklabels(): item.set_rotation(0)\n",
    "title = 'Line Ridership (April-August) '\n",
    "plt.suptitle(title, fontsize=16, fontweight='bold', style='italic')\n",
    "plt.subplots_adjust(top=0.10, bottom=0.075)\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Insights based on our analysis above\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "__`Line Ridership`__\n",
    "- Line Skew\n",
    "    - The lack of enough daily records for Train Lines P and Y could be solved by an attempt at resampling the data\n",
    "\n",
    "- High Positive Correlation(s)\n",
    "> Were observed for\n",
    "    - Stops vs. Rides\n",
    "    - Daily Records vs. Rides\n",
    "    - Junctions vs. Rides\n",
    "    \n",
    " > Wasn't observed for \n",
    "    - Number of hubs (on a Train Line) vs. Ridership for the period April-August\n",
    "\n",
    "__`Station/Stop Ridership`__\n",
    "- Types of Days\n",
    "    - During the prime periods of April â€“ August and Weekend & Holidays, we can clearly  distinguish a few leaders on the graph. \n",
    "\n",
    "    - Focusing on establishing our business near State and Main related area Stations will be the most lucrative options.\n",
    "\n",
    "    - These regions seem to fit our selection within the RED, BRN, Pexp Lines, while still bearing close proximity to other junctions.\n",
    "\n",
    "    - In addition, these regions do not exhibit a large drop-off outside of Weekend, Holidays or April-August periods."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Ideally, what other data would you gather or combine to learn even more?\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The data listed below contains certain relevant points that could potentially be solved through the mobile application for food trucks suggested above. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "__`Line/Station Analysis`__\n",
    "- Lack of Daily Records:\n",
    "> As noted in Line Ridership plots, some Lines have significantly fewer records collected (e.g. P, Y). For this reason, we may decide to pursue other Train Lines at this point.\n",
    "- Timestamps:\n",
    "> It would be beneficial to have Timestamps recorded hourly, such that Congestion Periods with a finer granularity can be determined and binned.\n",
    "- Contextual:\n",
    "> Contextual analysis via Special Events, Holiday Trains.\n",
    "\n",
    "__`Proximity`__:\n",
    "- Degrees of Separation:\n",
    "> The number of Station Stop Hops between the major Stations and a potential nearby CTA stop could impact the willingness of patrons to visit the location.\n",
    "- Distance to Business:\n",
    "> How far is the potential business from a CTA stop? Are their potential Lease Options already being looked into?\n",
    "- Convenience:\n",
    "> Collecting Survey information based on how convenient potential locations could be. It is possible some potential clients may not extend outside their comfort zones.\n",
    "\n",
    "__`Aggregation`__:\n",
    "- Modes of Transportation:\n",
    "> How does the CTA information compare with other modes of Transportation? e.g. walking, bicycling, buses.\n",
    "- Segmentation:\n",
    "> We could offer a more personalized and recommended service such as neighborhood ethnic specific cuisine at their dominant areas, non-dominant areas and thus help in the segmentation of customers according to their preferences that align with our profit gain.\n",
    "\n",
    " > Creation of a multi-layer geographic map consisting of the [historical ethnicity of each neighborhood in Chicago](https://encyclopedia.chicagohistory.org/pages/3889.html), [best of chicago's ethnic restaurants](https://www.kendall.edu/wp-content/themes/KendallCollege_childtheme/infographic/index.html) and ridership activity would offer us invaluable insights into formulating a strategy that would ensure maximum profitability.\n",
    "- Competition:\n",
    " > Aggregate information based on nearby similar competitors."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Drawbacks that our food truck mobile application hopes to resolve in Chicago"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Certain regulations were imposed as part of a 2012 ordinance:\n",
    "- Allows food trucks in Chicago to prepare food on board rather than serving only prepackaged items.\n",
    "> The time limit of 2 hours makes it impossible for trucks that cook on board to sell food throughout the lunch rush; by the time the food truck is set up, there is only about an hour before it's legally required to leave the location. \n",
    "- Prohibit the trucks from parking within 200 feet of any business that sells food (including convenience stores and pharmacies).\n",
    "- Prohibit the trucks remaining in the same spot for more than two hours. \n",
    "- Parking violations range from $1,000 to $2,000 per infraction, whereas health code citations start at $200. \n",
    "- The ordinance also mandates that trucks carry GPS units that allow the city to track their whereabouts. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Another viable solution implemented in Boston that could be extended to solve Chicago's food truck woes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Boston being the city of my residence, a research into the food truck industry here helped me understand an alternative way to tackle the issues plaguing this industry in Chicago."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![alt text](img/Case_Study_Food_Truck_Boston_1.png \"Boston Food Truck Case Study 1\")\n",
    "![alt text](img/Case_Study_Food_Truck_Boston_2 .png \"Boston Food Truck Case Study 2\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Local Context\n",
    "\n",
    "With less than a hundred food trucks, Bostonâ€™s food truck scene may be small in numbers but it certainly has not been overlooked by city officials. Since food trucks became popular in Bostonâ€™s dining scene in 2011, the City has been active in promoting the industryâ€™s growth while focusing on ensuring a healthy and sustainable industry.\n",
    "\n",
    "Bostonâ€™s approach to mobile food vending largely focuses on transparency and collaboration. In 2010, the City of Boston established the [Office of Food Initiatives](http://www.cityofboston.gov/food/). As part of this effort, the City later established the [Boston Food Truck](http://www.cityofboston.gov/foodtrucks/regulations/ordinance.asp) initiative which brought healthy food trucks hosted by the city to downtown Boston and into residential neighborhoods.\n",
    "\n",
    "To help food truck vendors navigate the process of starting up a food truck business, the city has an Office of Food Initiatives as well as a Mobile Food Truck Committee. As required by [ordinance](http://www.cityofboston.gov/foodtrucks/regulations/ordinance.asp), the Mobile Food Truck Committee includes representatives from the Department of Public Works, the Transportation Department, the Inspectional Services Department, the Police Department, the Fire Department, the Director of Food Initiatives, and the Assessing Department who collaboratively review and approve food truck applications.\n",
    "\n",
    "Since 2012, the City of Boston has implemented a [Live Lottery](http://www.cityofboston.gov/foodtrucks/scheduling/lottery.asp) to provide new and existing mobile food vendors with equal access to all city-approved public sites. This year vendors entered into a lottery to select from over 500 shifts available for the upcoming vending year, which begins April 1, 2015."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Regulatory Reform Highlight: Public Health\n",
    "\n",
    "Often recognized as one of the most innovative cities, the City of Boston has long been using data and technology to advance public good. As part of the cityâ€™s food truck permit application process, all mobile food vendors are required to register with a [GPS navigation contract](http://www.cityofboston.gov/whatsnew/foodtrucks.asp). Data is shared with the city to update the Office of Food Initiativeâ€™s food truck website. This data is open to the public and allows customers and city officials to [see which food trucks are vending only during vending hours](http://www.cityofboston.gov/whatsnew/improvements/foodtrucks.asp). This also helps the city ensure that registered food trucks are vending in the appropriate locations at the appropriate times, thus allowing the city to better identify illegal vendors operating without proper certification.   \n",
    "\n",
    "While many cities have established health and safety codes for mobile food vendors, the City of Boston allows residents to access data in a user-friendly format. In accordance with the Massachusetts State Sanitary Code, food service establishments are inspected at least once per year. New restaurants cannot open without an inspection and approval from the Health division. The City of Boston, in addition to listing all food truck locations on the Office of Food Initiativeâ€™s food truck website, provides data for all food health inspections via [The Mayorâ€™s Food Court â€“ Establishment Search](http://www.cityofboston.gov/isd/health/mfc/search.asp?ispostback=true&restname=&cboNhood=Mobile+Food+Truck), an online searchable database with the latest available inspection ratings by the Health Division of the Boston Inspectional Services Department. The site provides a list of previous inspections, ratings, as well as links to specific violations with comments. The city also provides an online, [interactive food truck permitting guide](http://www.cityofboston.gov/business/foodtruckpermits/gps.asp) to help ensure vendors are advised of the appropriate regulations."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
